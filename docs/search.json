[
  {
    "objectID": "analysis/postal_incumbency.html",
    "href": "analysis/postal_incumbency.html",
    "title": "Postal voting and incumbency advantage in Australian elections",
    "section": "",
    "text": "1 Summary\n\n2022 saw less than half of the electorate turn out to vote in-person and on Election Day.\nPre-polling and postal voting continued to become more prevalent methods of voting in 2022, accounting for 33% and 14% of 2022 turnout, respectively (Table 1; Figure 1).\nCoalition voters are more likely to use pre-polling or postal votes. In 2022, Coalition House candidates did 3 percentage points better in pre-polls than in other forms of voting, and 6 percentage points better in postal votes than in other forms of voting (Table 2; Table 3).\nThe six C200-supported candidates successfully elected to the House of Representatives typically under-performed in postal votes relative to other forms of voting (Figure 2). In part, this is due to the demographic and political dispositions of electors availing themselves of postal voting.\nBut incumbent independents (e.g., Wilkie, Steggall, Haines, Sharkie) did just as well or better among postal votes relative to other forms of voting.\nWhy? Does incumbency confer advantages on candidates with respect to shifting their voters to postal voting?\nSection 90B of the Commonwealth Electoral Act entitles “a member of the House of Representatives” to a version of the electoral roll with information as to whether each voter is a “general postal voter” inter alia, see section 90B(10). Candidates who are not incumbent members of the House are not entitled to this information, but merely a “copy of a certified list of voters” (see section 90B(1), item 1). We conjecture that this is a likely source of the asymmetry in incumbency advantage we observe in postal votes.\n\n\n\n2 Vote types in Australian federal elections\nThe AEC classifies votes as follows:\n\nordinary votes: cast in person at polling places, typically in the elector’s division of enrolment or at designated voting centres in capital cities and provincial centres adjoining that division. In 2019 83.2% of electors turned out to vote this way. The AEC includes pre-poll votes in this group, votes cast in person at pre-polling voting centres (PPVCs) or AEC divisional offices.\n\nThere are four types of declaration votes, where the voter signs a declaration instead of being marked off against the roll:\n\npostal votes: electors may request a mail ballot from the AEC and return it through the post. This is the most prevalent form of declaration voting, and form the vast bulk of the ballots counted after election night, as many postal votes have been returned to the AEC before Election Day.\nabsent votes: votes cast on Election Day, in person at a polling place, by electors outside of their division of enrolment (but still within their state or territory).\ndeclaration pre-poll votes: pre-poll ballots cast away from the elector’s division of enrolment.\nprovisional votes: ballots cast subject to AEC verification of the voter’s claim to be enrolled and entitled to vote in a particular division (typically used in cases of errors in names or addresses on the roll) or when the voter is registered as a silent elector.\n\n\n\n3 Change in prevalence of voting types, 2019 to 2022\n\n\n\nTable 1 shows the change in rates of the three most prevalent voting types between the 2019 and 2022 federal elections at the divisional level. Postal voting and pre-polling continued to surge in popularity in 2022. Postals and PPVCs have become more prevalent while in-person, Election Day voting has become less popular, accounting for less than 46% of 2022 turnout.\n\n\n\n\n\n\n\n\n\n\n\nFigure 1 displays the rates at which voters use different methods of voting by division, comparing 2019 rates (horizontal axis) to 2022 rates (vertical axis).\n\nvtype_data = transpose(vtype)\nxdomain = d3.extent(vtype_data.flatMap(d => [d.per_historic, d.per]))\nyhat_data = transpose(yhat)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\naddTooltips = (chart, hover_styles = { fill: \"blue\", opacity: 0.5 }) => {\n  let styles = hover_styles;\n  const line_styles = {\n    stroke: \"blue\",\n    \"stroke-width\": 3\n  };\n  // Workaround if it's in a figure\n  const type = d3.select(chart).node().tagName;\n  let wrapper =\n    type === \"FIGURE\" ? d3.select(chart).select(\"svg\") : d3.select(chart);\n\n  // Workaround if there's a legend....\n  const numSvgs = d3.select(chart).selectAll(\"svg\").size();\n  if (numSvgs === 2)\n    wrapper = d3\n      .select(chart)\n      .selectAll(\"svg\")\n      .filter((d, i) => i === 1);\n  wrapper.style(\"overflow\", \"visible\"); // to avoid clipping at the edges\n\n  // Set pointer events to visibleStroke if the fill is none (e.g., if its a line)\n  wrapper.selectAll(\"path\").each(function (data, index, nodes) {\n    // For line charts, set the pointer events to be visible stroke\n    if (\n      d3.select(this).attr(\"fill\") === null ||\n      d3.select(this).attr(\"fill\") === \"none\"\n    ) {\n      d3.select(this).style(\"pointer-events\", \"visibleStroke\");\n      styles = _.isEqual(hover_styles, { fill: \"blue\", opacity: 0.5 })\n        ? line_styles\n        : hover_styles;\n    }\n  });\n\n  const tip = wrapper\n    .selectAll(\".hover-tip\")\n    .data([\"\"])\n    .join(\"g\")\n    .attr(\"class\", \"hover\")\n    .style(\"pointer-events\", \"none\")\n    .style(\"text-anchor\", \"middle\");\n\n  // Add a unique id to the chart for styling\n  const id = id_generator();\n\n  // Add the event listeners\n  d3.select(chart)\n    .classed(id, true) // using a class selector so that it doesn't overwrite the ID\n    .selectAll(\"title\")\n    .each(function () {\n      // Get the text out of the title, set it as an attribute on the parent, and remove it\n      const title = d3.select(this); // title element that we want to remove\n      const parent = d3.select(this.parentNode); // visual mark on the screen\n      const t = title.text();\n      if (t) {\n        parent.attr(\"__title\", t).classed(\"has-title\", true);\n        title.remove();\n      }\n      // Mouse events\n      parent\n        .on(\"mousemove\", function (event) {\n          const text = d3.select(this).attr(\"__title\");\n          const pointer = d3.pointer(event, wrapper.node());\n          if (text) tip.call(hover, pointer, text.split(\"\\n\"));\n          else tip.selectAll(\"*\").remove();\n\n          // Raise it\n          d3.select(this).raise();\n          // Keep within the parent horizontally\n          const tipSize = tip.node().getBBox();\n          if (pointer[0] + tipSize.x < 0)\n            tip.attr(\n              \"transform\",\n              `translate(${tipSize.width / 2}, ${pointer[1] + 7})`\n            );\n          else if (pointer[0] + tipSize.width / 2 > wrapper.attr(\"width\"))\n            tip.attr(\n              \"transform\",\n              `translate(${wrapper.attr(\"width\") - tipSize.width / 2}, ${\n                pointer[1] + 7\n              })`\n            );\n        })\n        .on(\"mouseout\", function (event) {\n          tip.selectAll(\"*\").remove();\n          // Lower it!\n          d3.select(this).lower();\n        });\n    });\n\n  // Remove the tip if you tap on the wrapper (for mobile)\n  wrapper.on(\"touchstart\", () => tip.selectAll(\"*\").remove());\n  // Add styles\n  const style_string = Object.keys(styles)\n    .map((d) => {\n      return `${d}:${styles[d]};`;\n    })\n    .join(\"\");\n\n  // Define the styles\n  const style = html`<style>\n      .${id} .has-title {\n       cursor: pointer; \n       pointer-events: all;\n      }\n      .${id} .has-title:hover {\n        ${style_string}\n    }\n    </style>`;\n  chart.appendChild(style);\n  return chart;\n}\n\n// Function to position the tooltip\nhover = (tip, pos, text) => {\n  const side_padding = 10;\n  const vertical_padding = 2;\n  const vertical_offset = 24;\n\n  // Empty it out\n  tip.selectAll(\"*\").remove();\n\n  // Append the text\n  tip\n    .style(\"text-anchor\", \"middle\")\n    .style(\"pointer-events\", \"none\")\n    .attr(\"transform\", `translate(${pos[0]}, ${pos[1] - 6})`)\n    .selectAll(\"text\")\n    .data(text)\n    .join(\"text\")\n    .style(\"dominant-baseline\", \"ideographic\")\n    .text((d) => d)\n    .attr(\"y\", (d, i) => (i - (text.length - 1)) * 18 - vertical_offset)\n    .style(\"font-weight\", (d, i) => (i === 0 ? \"bold\" : \"normal\"));\n\n  const bbox = tip.node().getBBox();\n\n  // Add a rectangle (as background)\n  tip\n    .append(\"rect\")\n    .attr(\"y\", bbox.y - vertical_padding)\n    .attr(\"x\", bbox.x - side_padding)\n    .attr(\"width\", bbox.width + side_padding * 2)\n    .attr(\"height\", bbox.height + vertical_padding * 2)\n    .style(\"fill\", \"white\")\n    .style(\"stroke\", \"#eee\")\n    .lower();\n    \n  tip\n    .append(\"line\")\n    .attr(\"x1\",bbox.x + bbox.width/2)\n    .attr(\"x2\",bbox.x + bbox.width/2)\n    .attr(\"y1\",bbox.y + vertical_padding)\n    .attr(\"y2\",this.y)\n    .style(\"stroke\",\"#eee\")\n    .lower();\n}\n\n// To generate a unique ID for each chart so that they styles only apply to that chart\nid_generator = () => {\n  var S4 = function () {\n    return (((1 + Math.random()) * 0x10000) | 0).toString(16).substring(1);\n  };\n  return \"a\" + S4() + S4();\n}\n\nPlot = tooltipPlugin(await require(\"@observablehq/plot\"))\n\ntooltipPlugin = (Plot) => {\n  const { plot } = Plot;\n  Plot.plot = ({ tooltip, ...options }) => addTooltips(plot(options), tooltip);\n  return Plot;\n}\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nPlot.plot({\n  grid: false,\n  width: 1020,\n  height: 480,\n  insetTop: 18,\n  \n  style: {\n    fontSize: \"16px\"\n  },\n  \n  x: {\n    label: \"2019 Percentage →\",\n    labelOffset: 0\n  },\n  \n  y: {\n    label: \"↑ 2022 Percentage\"\n  },\n\n  facet: {\n    data: vtype_data,\n    x: \"Type\"\n    //y: \"c200\",\n    //marginRight: 60 \n    },\n    \n  fx: {\n    padding: 0.1,\n    labelOffset: 48\n  },\n  \n  /* fy: {\n    axis: 'right',\n    padding: 0.1,\n    label: 'C200\\nsupported'\n  }, */\n  \n  marks: [\n    Plot.link([1],\n      {x1: 0, x2: xdomain[1], y1: 0, y2: xdomain[1]}\n      ),\n      \n   Plot.link([0.7, 0.8, 0.9], {\n      x1: 0,\n      y1: 0,\n      x2: xdomain[1],\n      y2: k => xdomain[1]*k,\n      strokeOpacity: 0.2\n    }),\n    \n    Plot.text([0.7, 0.8, 0.9, 1.0], {\n      x: xdomain[1],\n      y: k => xdomain[1]*k,\n      text: d => d === 1 ? \"Equal\" : d3.format(\"+.0%\")(d - 1),\n      textAnchor: \"start\",\n      fontSize: \"11px\",\n      dx: 6      \n    }),\n    \n    Plot.link([0.1, 0.25, 0.5], {\n      x1: 0,\n      y1: 0,\n      x2: k => xdomain[1]/(1+k),\n      y2: k => xdomain[1],\n      strokeOpacity: 0.2\n    }),\n    \n    Plot.text([0.1, 0.25, 0.5], {\n      x: k => xdomain[1]/(1+k),\n      y: k => xdomain[1],\n      text: d => d === 1 ? \"Equal\" : d3.format(\"+.0%\")(d),\n      textAnchor: \"middle\",\n      fontSize: \"11px\",\n      dy: -6      \n    }),\n    \n    Plot.dot(vtype_data,\n    { x: \"per_historic\", \n      y: \"per\" ,\n      title: (d) => `${d.Division} (${d.State}) \\n 2022: ${d3.format(\".1f\")(d.per)} \\n 2019: ${d3.format(\".1f\")(d.per_historic)}`,\n      stroke: \"#3333337f\"\n    }\n    ),\n  \n    Plot.line(yhat_data,\n      { x: \"per_historic\",\n        y: \"per\",\n        facet: \"include\",\n        stroke: \"orange\",\n        strokeWidth: 3\n      }\n    )\n    \n  ],\n  \n  tooltip: {\n    fill: \"red\"\n  }  \n  \n})\n\n\n\n\n\nFigure 1: Postal and PPVC voting surged in 2022, and in-person, Election Day voting fell to less than 50% of 2022 turnout. Each column of plots corresponds to a form of voting. Each data point is a House of Representatives division; percentages are of method of voting (including informal ballots). Orange lines indicate trends. Roll over each data point to display division name.\n\n\n\n\n\n\n\n\n\n\n\n4 Differences in vote support across voting type\nConventionally, (a) major parties outperform minor parties and independents on postals; (b) the Coalition generally outperforms Labor on postals, but this out-performance is less pronounced and even reversed in other forms of voting.\nThe reasons for this are straightforward:\n\nmajor parties have the organisational resources to make use of the AEC’s data on who votes by post etc, to send out applications for postal ballots, to track changes of addresses given their access to to the roll\nolder, wealthier voters make use of postal voting, both for convenience and because they have more time and resources to apply for the ballot, complete it and mail it back. This segment of the electorate skews towards the Coalition.\n\nThese patterns are evident in differences in party performance across voting types in the 2022 election, using figures available at this stage of the count, as shown in the following two tables. Table 2 shows first-preference, House of Representatives percentages for each party in 2022 by vote type; Table 3 presents the same data but with each party’s vote share by vote type expressed relative to that party’s performance in other vote types.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nThese 2022 data are consistent with the patterns observed in previous elections:\n\nthe Coalition over-performs with postal votes and early voting at PPVCs, and under-performs with in Election Day, in-person voting at polling places.\nwhile the Coalition is huge over-performer with respect to postal votes, Labor under-performance is close to zero.\nRelatively few Coalition voters cast a provisional ballot, with Green and Labor voters more likely to vote this way.\nThe Greens have a disproportionate share of absentee votes, and their voters do better in Election Day, in-person voting at polling places.\nVotes for Independent candidates are disproportionately cast in-person on Election Day, but are less likely to be cast as postal votes.\n\n\n\n5 Even successful C200-supported candidates lagged in postal votes\nFigure 2 disaggregates the data shown in summary form above for postal voting. The preference for postal voting among Coalition voters — and in seats held by the Coalition — is clearly apparent (filled circles in Figure 2 denote seats held by the indicated party going into the 2022 election), with almost all Coalition candidates faring better in postal votes than in other vote types.\nA strong performance is postal votes is hardly a guarantee of electoral success, and indeed, could well be a sign of electoral weakness (e.g., that a party’s support is overly concentrated in an older segment of an electorate). Figure 2 highlights that losing Coalition incumbents in Wentworth, Goldstein, Curtin, Kooyong, Mackellar and North Sydney had strong over-performance among postal votes.\nThe picture is mixed for Labor candidates, with many Labor incumbents in particular recording small to moderate over-performances among postal votes. Among postal votes, Green candidates almost always under-perform relative to their performance among other forms of voting, including their sole incumbent going into the 2022 election, Adam Bandt (Melbourne).\n\n\n\n\n\n\n\npd = transpose(pd_raw)\n\n\n\n\n\n\n\nPlot.plot({\n  grid: true,\n  width: 1000,\n  height: 1000,\n  insetBottom: 2,\n  insetTop: 2,\n  \n  style: {\n    fontSize: \"16px\"\n  },\n  \n  y: {\n    domain: [-16, 17],\n    ticks: 17,\n    tickFormat: \"+\",\n    label: \"Share of postal vote minus vote share among other vote types (percentage points) ↑\"\n  },\n  \n  x: {\n    label: \"\"\n  },\n\n  facet: {\n    data: pd,\n    x: \"party_group\",\n    frame: false,\n    marginTop: 50,\n    marginLeft: 0,\n    marginRight: 0,\n    marginBottom: 30\n    },\n    \n  fx: {\n    padding: 0.1,\n    label: \"\"\n  },\n  \n  marks: [\n  \n    Plot.ruleY([0], {stroke: \"#333\"}),\n  \n    Plot.dot(pd,\n      Plot.dodgeX(\n        {\n          filter: (d) => !d.highlight,\n          y: \"perf\",\n          anchor: \"middle\",\n          padding: 2,\n          r: 4,\n          title: (d) => `${d.Division} (${d.State}) \\n ${d3.format(\"+.1f\")(d.perf)} \\n ${d.name}`,\n          stroke: (d) => d.color,\n          fill: (d) => d.incumbent_2022 ? d.color : \"transparent\"\n        }\n      )\n    ),\n    \n     Plot.text(pd,\n      Plot.dodgeX(\n      {\n        filter: \"highlight\",\n        y: \"perf\",\n        anchor: \"middle\",\n        padding: 50,\n        text: (d) => (d.incumbent_2022 ? '●' : '○') + d.Division,\n        fill: \"color\",\n        stroke: \"#fff\",\n        fontSize: \"13px\",\n        textAnchor: \"start\",\n        fontWeight: 700,\n        title: (d) => `${d.Division} (${d.State}) \\n ${d3.format(\"+.1f\")(d.perf)} \\n ${d.name}`,\n      })\n    )\n    \n  ],\n  \n  tooltip: {\n  }  \n  \n})\n\n\n\n\n\nFigure 2: Postal voting performance of House of Representatives candidates, relative to performance among other type of votes. Each point shows the difference between a candidate’s share of the postal vote and their share of all other vote types. Incumbents (or candidates of incumbent parties) are denoted with filled circles, challengers are shown with open circles; data for C200-supported independents are coloured teal; Sharkie (XEN; Mayo, SA) and Katter (KAP; Kennedy, QLD) are denoted as IND for inclusion in the graph. Data are randomly jittered in the horizontal dimension to show the density of the data and to avoid overplotting. Roll over each data point to display details.\n\n\n\nMost independent candidacies are quixotic, generating low vote shares that vary little across vote types; as show in Figure 2, postal vote shares for most independents are identical to their vote shares in other forms of voting.\nBut like Labor and Coalition candidates, incumbent independents tend to do better among postal votes than among other forms of voting. For non-incumbent independents, including the successful, C200-supported candidates, their performance among postal vote lags their performance across over types of voting, and by substantial margins.\n\n\n6 Postal vote performance and incumbency\nWe look closer at relative performance in postal votes (RPV), comparing established, incumbent independents and independents challenging incumbents (or candidates of incumbent parties).\nWe also include data from 2019 — when at least two of 2022’s incumbent independents were challengers (Haines and Steggall) — to start to assess the role of incumbency as a predictor of postal vote performance. Further, in 2019, Kerryn Phelps was the independent incumbent in Wentworth, challenged successfully by Dave Sharma, who in turn was challenged successfully by independent Allegra Spender in 2022.\nThese within-division comparisons have the benefit of holding constant any time-invariant, divisional-level factors that might influence the postal vote performance of independents, while at the same time capturing some variation in the incumbency status of independent candidates.\nTable 4 presents data from this relatively small set of independent candidacies, showing (a) the level of postal vote performance relative to other vote types for both 2019 and 2022 (RPV), (b) the change (∆) in RPV as well as (c) the prevalence of postal voting in the division in 2019 and 2022 and (d) change in prevalance. We also note the incumbency status of the independent candidate in each case.\n\n\n\n\n\n\n\n\n\n\n\n\n\nThis small number of cases highlights again that (a) incumbent independents typically do better in postal votes than in other forms of voting; (b) that becoming an incumbent boosts postal vote performance, as evidenced by the experience of Haines (Indi, VIC) and Steggall (Warringah, NSW), both transitioning relative under-performance among postals to over-performance as they transitioned from challenger to incumbent between the 2019 and 2022 elections:\n\nHaines’ relative performance among postal votes (RPV) goes from -4.0 to +1.5 between 2019 and 2022, a gain of 5.5 percentage points;\nSteggall’s RPV rises from -6.8 as a challenger in 2019 to +1.6 in 2022, a gain of 8.4 percentage points.\n\nThese two data points can be distinguished from the changes in RPVs for independent candidates who did not transition from challenger to incumbent:\n\nSharkie (Mayo, SA) also sees a 5.5 improvement in RPV as an incumbent in both elections, the same as Haines, while Wilkie’s RPV falls -1.2 percentage points.\nChanges in RPV for the other cases — -4.0 for Dyson (Wannon, VIC), a challenger in both elections, and -1.2 Spender relative to Phelps (Wentworth NSW) — further suggest that incumbency is positively associated with RPV.\n\nMoreover, changes in the prevalence of postal voting are almost constant over this set of divisions, with little prospect of any confounding of the effect of incumbency on RPV with the increase in the use of postal voting between 2019 and 2022.\n\n\n\nStatistical tests confirm that incumbency promotes postal vote performance. We estimate regressions of 2019-to-2022 change in RPV, with two predictors:\n\nchange in incumbency between 2019 and 2022 (+1 for 2019 challenger to 2022 incumbent, 0 for no change and -1 for 2019 incumbent to 2022 challenger)\nchange in the prevalence of postal voting in each division, 2019 to 2022, so that estimates of the incumbency changes are net of any effects on RPV due to the increase in the prevalence of postal voting.\n\nWe estimate this regression separately for Coalition, Independent candidates and Labor candidates. Green candidates are omitted from this “differences-in-differences” analysis, since there is no variation in the incumbency status of Greens candidates between 2019 and 2022, with Adam Bandt remaining the sole Greens House of Representatives incumbent in both elections. We also fit this model to differences in relative performance in votes cast at pre-poll voting centres (PPVC), the other vote type to surge in popularity in 2022.\nFigure 3 presents these regression-based estimates of the effects of a transition to incumbency in graphical form: points correspond to the magnitude of the estimated effects and vertical lines cover 95% confidence intervals.\nAs foreshadowed in the tables and charts above, the effects of transitioning to incumbency are large for independents, and are also positive and distinguishable from zero for Coalition (1.4, \\(t\\) = 1.8) and Labor candidates (1.9, \\(t\\) = 2.2). No such effects are found in the case of “pre-poll” votes, the other voting type to surge in popularity in 2022.\n\n\n\n\nregdata = transpose(regression_tmp)\n\n\n\n\n\n\n\nPlot.plot({\n  grid: true,\n  width: 1000,\n  height: 1000,\n  marginTop: 52,\n  insetTop: -6,\n  insetBottom: 2,\n  \n  style: {\n    fontSize: \"16px\"\n  },\n  \n  y: {\n    ticks: 12,\n    tickFormat: \"+\",\n    label: \"Effect of change in incumbency on change in RPV ↑\"\n  },\n  \n  x: {\n    label: \"\"\n  },\n\n  facet: {\n    data: regdata,\n    x: \"Type\",\n    marginLeft: 0,\n    marginTop: 22\n  },\n    \n  fx: {\n    padding: 0.1,\n    label: \"\"\n  },\n  \n  marks: [\n  \n    Plot.ruleY([0], {stroke: \"#333\"}),\n  \n    Plot.link(regdata,\n    {\n      x: \"party_group\",\n      y1: \"lo\",\n      y2: \"up\",\n      stroke: (d) => d.color,\n      strokeWidth: 4\n    }\n    ),\n  \n    Plot.dot(regdata,\n        {\n          y: \"estimate\",\n          x: \"party_group\",\n          r: 8,\n          title: (d) => `${d3.format(\".1f\")(d.estimate)} \\n (t = ${d3.format(\".1f\")(d.statistic)}) \\n n = ${d.n}`,\n          stroke: (d) => d.color,\n          fill: (d) => d.color\n        }\n    )\n\n    \n  ],\n  \n  tooltip: {\n  }  \n  \n})\n\n\n\n\n\nFigure 3: Effect of change in incumbency status on change in relative postal voting performance. Points denote the estimated effect; lines extend to over 95% confidence intervals. Roll over each data point to display details.\n\n\n\n\n\n7 Further research and recommendations\nIncumbents appear to enjoy an advantage with respect to postal votes that they did not have as challengers. As postal votes continue to grow in popularity, understanding the mechanisms by which this advantage arises will be vital as a general proposition, but in particular for C200-supported independents, holding seats traditionally considered Coalition-strongholds, seats in which the use of postal voting is higher than average.\nIn addition to quantitative data analysis, qualitative work with established, incumbent independents (Steggall, Haines, Sharkie, Wilkie) will help shed light on these mechanisms.\nSection 90B of the Commonwealth Electoral Act entitles successful House of Representatives candidates to a version of the electoral roll with postal voting information appended for each voter; in particular see section 90B(10). Analysis of that information will be vital in helping answer the questions posed above, and to ensure that postal voting etc are not points of vulnerability for Independent candidates in future elections.\nPooling this information from the AEC across multiple divisions would strengthen the analytical power and practical utility of this proposed analysis. But given restrictions on access to the electoral roll, legal advice can inform if and how this combined analysis can be undertaken."
  },
  {
    "objectID": "analysis/sa1/sa1.html#ill-posed-inverse-problems-lack-unique-solutions",
    "href": "analysis/sa1/sa1.html#ill-posed-inverse-problems-lack-unique-solutions",
    "title": "Small area estimates of vote shares: the 2022 Australian federal election",
    "section": "\n4.1 “Ill-posed” inverse problems lack unique solutions",
    "text": "4.1 “Ill-posed” inverse problems lack unique solutions\nEquation 1 highlights a key feature of the inferential task at hand. We have n \\times P pieces of information in \\boldsymbol{y}, the n polling place level vectors of vote counts for the P parties/candidates. Our model expresses these in terms of a weighted sum of We seek estimates of m > n SA1 level vectors of vote counts \\boldsymbol{x}, or m \\times P unknown quantities. Equation 1 and Equation 2 shows that the relationship between \\boldsymbol{y} and \\boldsymbol{x} is linear, but with m > n the implied system of linear equations is under-determined, with a set of possible \\boldsymbol{\\zeta}_{ij} (or equivalently, \\boldsymbol{\\lambda}_{ij}) that satisfy Equation 1 rather than a unique solution.\nIn the language of mathematics, computer science and engineering, our problem is one of trying to recover an unobserved input from an output: an “inverse” problem”. Further, the inverse problem here is “ill-posed” in that the measurement process compresses or coarsens the SA1 level inputs to polling place level outputs, generating the analogue to an under-determined system of equations. The SA1-to-polling place turnout counts A_{ij} only supply information about the sum of the P elements of \\boldsymbol{\\zeta}_{ij}, reducing the solution space but leaving many configurations of SA1-level vote tallies consistent with the polling place tallies.\nFrom the outset, therefore, we ought to concede that there is no unique set of m SA1 level vote tallies \\boldsymbol{x} consistent with the n polling place tallies \\boldsymbol{y}. This is seldom acknowledged by practitioners who typically employ the simple, deterministic algorithm for estimating \\boldsymbol{x} we study in Section 6.1. Our purpose here is to restate this overlooked point, explore feasible solutions and observe what these estimates (and the variation among them) imply for downstream inferences about political preferences."
  },
  {
    "objectID": "analysis/sa1/sa1.html#sec-deterministic",
    "href": "analysis/sa1/sa1.html#sec-deterministic",
    "title": "Small area estimates of vote shares: the 2022 Australian federal election",
    "section": "\n6.1 Deterministic estimator",
    "text": "6.1 Deterministic estimator\nEach \\lambda_{ij} in Equation 2 is to set to the vote proportions observed at its corresponding polling place i, i.e.,\n\n\\hat{\\lambda}_{ij} = y_i / n_i\n\\tag{4}\nwhere n_i = \\sum_{j=1}^m A_{ij} is the number of voters at polling place i. One rationalization for this estimator is that absent any other information, the segment of voters at polling place i originating from SA1 j can not be distinguished from any of the other voters at polling place i. From the perspective of the analyst, it is as if the set of voters at polling place i from SA j comprise a random sample from the set of all voters turning out at polling place i. All such segments are hence exchangeable and hence we should assign any particular segment the same vote probabilities as any other segment, for which our best guess is simply the observed vote proportions at polling place i (Equation 4).\nThe estimator in Equation 4 is (a) trivially consistent with the observed data — confirmed by substituting \\hat{\\lambda}_{ij} from Equation 4 into Equation 1; (b) relies on assumptions so seemingly uncontroversial that they need no justification and are rarely even stated; (c) is easily computed using spreadsheets.\nAn elaboration of this estimator comes from noting subsets of the voters turning out at polling place i will almost surely have different vote shares than those of the entire set. That is, for any polling place i, its SA1-specific segments \\lambda_{ij} will almost surely vary around the polling place shares y_i/n_i, a function of the political heterogeneity of the SA1s and the processes leading voters to turn out at particular polling places. These factors will induce more or less variation in \\lambda_{ij}.\nSo, while Equation 4 provides a valid estimate of SA1-level votes — in the sense of being consistent with the observed data — it is almost certainly underestimating variation in the \\lambda_{ij} within polling places and hence the SA1 vote shares themselves. While recourse to the “principal of insufficient reason” CHECK THIS leads to the deterministic estimator, any set of \\lambda_{ij} that satisfy the equality in Equation 1 is as valid as any other.\nIn turn, this observation speaks to the “ill-posed” nature of this inferential problem: in general, there is no unique solution when trying to invert the aggregation of m SA1-level vote shares to n polling place sets of observations, when m > n."
  },
  {
    "objectID": "analysis/sa1/sa1.html#permutation-based-estimator",
    "href": "analysis/sa1/sa1.html#permutation-based-estimator",
    "title": "Small area estimates of vote shares: the 2022 Australian federal election",
    "section": "\n6.2 Permutation-based estimator",
    "text": "6.2 Permutation-based estimator\nSimulation-based methods let us operationalise the variation of \\lambda_{ij} around the polling place level vote shares y_i/n_i. For polling place i, each SA1 contributes A_{ij} voters, with an unknown set of vote proportions \\lambda_{ij}. A permutation-based method for simulating variation in the unobserved \\lambda_{ij} is\n\ndefine a vector v_i = 1, \\ldots, n_i, indexing voters turning out at polling place i; without loss of generality, partition this vector into bins of size y_i = (y_{i1}, y_{i2}, \\ldots, y_{iP})' each y_{ip} corresponding to the number of votes for party/candidate p recorded at polling place i.\nfor arbitrarily many iterations k = 1, \\ldots, K, randomly assign the elements of v_i to m partitions each of size A_{ij}, where j \\in 1, \\ldots, m indexes the SA1s contributing votes to polling place i. This procedures yields a random permutation of votes counted at polling place i into originating SA1s. By construction, each such random permutation is consistent with (a) the polling place vote tallies y_i and (b) the known sizes of the segments of voters by their originating SA1 (A_{ij}).\nCompute \\zeta^{(k)}_{ij} = (\\zeta_{ij1}^{(k)}, \\zeta_{ij2}^{(k)}, \\ldots, \\zeta_{ijP}^{(k)})' counts of the v_i voting for party/candidate p = 1, \\ldots, P among those v_i assigned to SA1 j \\in 1, \\ldots, m under permutation k.\nRecalling Equation 2, form the vectors of SA1-level vote counts \\hat{x}^{(k)}_j = \\sum_{i=1}^n \\zeta^{(k)}_{ij}.\nAverage over K iterations to form estimators \\hat{\\zeta}_{ij} = \\frac{1}{K} \\sum_{k=1}^K \\zeta^{(k)}_{ij}; we form 90% credible intervals by computing the 5% and 95% percentiles of each element of the K \\hat{\\zeta}_{ij}. These estimated vote counts can be also be reported as proportions via Equation 3."
  },
  {
    "objectID": "analysis/sa1/sa1.html#reverse-estimation-application-to-wentworth",
    "href": "analysis/sa1/sa1.html#reverse-estimation-application-to-wentworth",
    "title": "Small area estimates of vote shares: the 2022 Australian federal election",
    "section": "\n6.3 Reverse estimation: application to Wentworth",
    "text": "6.3 Reverse estimation: application to Wentworth\n\n\n\n\nFigure 4: Estimates of vote in Wentworth SA1s, 2022 Federal election, based on 50,000 permutations of votes to SA1s. Points correspond to estimates vote shares and horizontal lines cover 90% credible intervals. Estimates for SA1s with fewer than 10 voters are highly imprecise and are excluded from the graphs. Each panel corresponds to results with respect to the indicated party; the data are ordered within each panel; the vertical orange line on each panel indicate the division-wide vote share for the indicated party.\n\n\n\n\nMAP HERE, ideally linked to chart"
  },
  {
    "objectID": "analysis/sa1/sa1_oddity.html",
    "href": "analysis/sa1/sa1_oddity.html",
    "title": "Discrepancies in Australian Electoral Commission voter turnout counts",
    "section": "",
    "text": "After each federal election, the Australian Electoral Commission (AEC) produces a data file that provides voter turnout counts for the purpose of determining the geographical “catchment” of each polling place (the “SA1 file”).\nThe AEC results for the 2022 election reports 15,461,379 House of Representatives votes (including informal ballots) in the 2022 election, 8,346 fewer than the 15,469,725 voters recorded as turning out in the SA1 file. In aggregate, it would appear that more people are being “marked off” as having voted than actually return ballots.\nWhile small in absolute terms, discrepancies between voter turnout counts in the SA1 file and AEC results are larger for (a) declaration votes (b) in divisions with higher numbers of voters with limited English language proficiency.\nWe speculate as to mechanisms driving these discrepancies. Possibilities include\n\nbad address data\nerrors by polling officials\nvoters discarding ballots after being marked off as having turned out\nlost ballot papers or vote counting errors\nitinerant voters\ndeclaration votes issued but not returned for counting\n\nAustralia has an enviable history of non-partisan, professional election administration. The AEC is exemplary in making election results for the entire country available in real time. It is wholly consistent with the AEC’s norms of transparancy and rigour to better understand the discrepancies described in this report. Comments from the #auspol community and the AEC would be most welcome."
  },
  {
    "objectID": "analysis/sa1/sa1_oddity.html#bad-addresses",
    "href": "analysis/sa1/sa1_oddity.html#bad-addresses",
    "title": "Discrepancies in Australian Electoral Commission voter turnout counts",
    "section": "4.1 Bad addresses?",
    "text": "4.1 Bad addresses?\nOne possibility is that the addresses supplied by citizens when enrolling are incomplete or contain errors, not so bad as to be rejected by the AEC and good enough for placing a voter in an electoral division, but with enough error or incompleteness as to make it impossible to geo-code and assign the voter to a SA1.\nAnalysts working for political parties have access to the electoral roll (see S90, CEA). Informal reports from these analysts are that addresses on the roll are not always “clean” enough for unproblematic assignment to SA1s."
  },
  {
    "objectID": "analysis/sa1/sa1_oddity.html#errors-at-polling-places",
    "href": "analysis/sa1/sa1_oddity.html#errors-at-polling-places",
    "title": "Discrepancies in Australian Electoral Commission voter turnout counts",
    "section": "4.2 Errors at polling places?",
    "text": "4.2 Errors at polling places?\nTurning out in-person on Election Day at a polling place accounted for 45.3% of 2022 turnout, remaining the single most prevalent method of voter turnout as the popularity of pre-polling and postal voting has surged. Another 33% of 2022 turnout was via in-person voting at a pre-poll voting centre (PPVC).\nBoth forms of voting begin with an individual presenting themselves to election officials at a polling place. The election official asks the individual for their name and address (S229, CEA) so as to uniquely locate the individual on the certified list (the “roll”) of eligible voters for that electoral division.\nElection officials then “mark off” the voter on the roll as having turned out as per S232 CEA, a key moment in Australia’s system of compulsory turnout, where the citizen is recorded as having fulfilled their duty to vote as prescribed by S245 CEA. Given that this is a “one-to-one” matching exercise performed by an election official (locating an individual voter on the electronic roll, appending that information with a record of the voter turning out), how can errors in the turnout count possibly arise?\nAfter verification that the individual presenting themselves is an enrolled voter, the AEC official issues balloting materials to the voter (S231, CEA) and the voter’s marking of the ballot takes place “in private” (S233, CEA). No further check of identity takes place when a ballot is deposited into a ballot box, nor is there any formal check that individuals marked off the roll and issued ballot papers actually do return the papers to ballot boxes.\nS339(1)(e) establishes that to “fraudulently take any ballot paper out of any polling booth or counting center” is an offence. But otherwise failing to place a ballot in a ballot box does not appear to be an offence. Indeed, S238A deals with the handling of “discarded ballot papers” by election officials, so clearly the notion that not all issued ballots are deposited in ballot boxes is contemplated by the AEC.\nAccordingly, discrepancies between the SA1 file counts and AEC results files for in-person, polling places could arise via\n\nerrors made by election officials when marking off voters against the electoral roll, perhaps “marking off” more than one record on the roll (contributing to an overcount on the SA1 file), or failing to mark off the voter against the roll (contributing to an undercount).\nvoters not returning issued ballot papers to ballot boxes (contributing to an overcount in the SA1 file)\nballot papers being lost after being deposited in ballot boxes (contributing to an overcount in the SA1 file); or\nerrors in counting ballot papers (generating overcounts or undercounts relative to the SA1 file)\nthe possibility that deliberate errors are introduced by the AEC in constructing the SA1 file, with a small level of random “noise” in the counts so as to protect the anonymity of voters, given that cell counts are small in the SA1 file.\n\nNote that fraudulently voting multiple times (presumably while impersonating another voter, both offences under S339 CEA) would not generate an overcount in the SA-1 file, but more likely an undercount (more votes going into ballot boxes than there are unique voters presenting themselves to polling places), and perhaps not even that."
  },
  {
    "objectID": "analysis/sa1/sa1_oddity.html#alternate-methods-of-voting-possible-over-counts-in-the-sa1-file",
    "href": "analysis/sa1/sa1_oddity.html#alternate-methods-of-voting-possible-over-counts-in-the-sa1-file",
    "title": "Discrepancies in Australian Electoral Commission voter turnout counts",
    "section": "4.3 Alternate methods of voting & possible over-counts in the SA1 file",
    "text": "4.3 Alternate methods of voting & possible over-counts in the SA1 file\nPostal voting accounted for 14.3% of voter turnout in 2022, absent votes 3.2%, declaration pre-polls 3.6% and provisional votes 0.3%. Details vary across these methods, but all of these methods see the voter providing written information as to their address and/or division of enrolment. How, then, might discrepancies arise between the SA1 turnout counts and the AEC results? Possibilities include:\n\nDeclaration votes issued by the AEC to voters but not returned.\nDeclaration votes issued and returned but rejected during scrutiny for validity (see Schedule 3, CEA) and not added to the vote count, not even as an informal ballot.\n\nIn both of these cases an overcount on the SA1 file might arise if a voter is “marked off” as having turned out but the ballot is not entered into the count for the reasons given above."
  },
  {
    "objectID": "analysis/sa1/sa1_oddity.html#the-curious-case-of-undercounts-on-the-sa1-file",
    "href": "analysis/sa1/sa1_oddity.html#the-curious-case-of-undercounts-on-the-sa1-file",
    "title": "Discrepancies in Australian Electoral Commission voter turnout counts",
    "section": "4.4 The curious case of undercounts on the SA1 file",
    "text": "4.4 The curious case of undercounts on the SA1 file\nUndercounts on the SA1 file arise when there the SA1 file has a smaller turnout count than in that recorded in the AEC results file. As we show below, this is an unusual outcome, a situation where there are more ballots recorded in the vote count than there are voters recorded as turning out on the SA-1 file.\nOne possibility is error by an official at the polling place, neglecting to “mark off” a voter, yet still issuing ballot papers to the voter.\nFor declaration votes, perhaps voters requesting declaration or pre-poll ballot are being issued ballot papers from the wrong division, such that they are “marked off” as having voted in their division of enrolment, but wind up casting a ballot in another division (which is rejected at scrutiny). This would contribute to the AEC results turnout count in a division, without an increment in the SA1 file’s count for that polling-place/division.\nThis phenomenon also manifests in more Senate votes being received than for the House of Representatives elections; declaration voters who accurately verify their state of residence will have their vote for Senate counted, while those who err in their claim as to their division of enrolment will have their House of Representatives ballot rejected. We explore if Senate and House turnout differentials explain the discrepancies between the SA1 file’s turnout figures and AEC results. But note that nationally, Senate turnout exceed House turnout by 111,282 (using AEC results), far more than the 8,000 vote discrepancy between House turnout and the SA1 file."
  },
  {
    "objectID": "analysis/sa1/sa1_oddity.html#itinerant-voters",
    "href": "analysis/sa1/sa1_oddity.html#itinerant-voters",
    "title": "Discrepancies in Australian Electoral Commission voter turnout counts",
    "section": "4.5 Itinerant voters",
    "text": "4.5 Itinerant voters\nOther possible sources of an undercount on the SA1 files are voters lacking a fixed address, and hence unassigned to a conventional SA1. Consistent with the universalism inherent in Australia’s system of compulsory voter enrolment and turnout, the franchise is not restricted to citizens with a fixed place of residence and S96 CEA deals with the enrolment of “itinerant electors”.\nThe ABS uses SA1 codes ending in 49999 for 30,831 Australian citizens counted by the 2021 Census but without a fixed address; the corresponding count on the 2016 Census file (recalling that 2016 SA1s are used by the AEC on the 2022 SA1 turnout file) is 27,960. None of the 2016 ABS SA1 codes for “no fixed address” appear on the SA1 file.\nWe should not expect especially high turnout among the adult, citizen, itinerant population. Nonetheless it seems that any itinerant voters that do turn out would not contribute to the counts on the SA1 file. In turn, turnout by itinerant electors will push the SA1 file in the direction of a turnout undercount relative to AEC results."
  },
  {
    "objectID": "analysis/gan/curf_aes_harmonise.html",
    "href": "analysis/gan/curf_aes_harmonise.html",
    "title": "Harmonise CURF with AES 2022",
    "section": "",
    "text": "Codeimport { aq, op } from \"@uwdata/arquero\"\n\n\n\n\n\n\n\n1 CURF\nThe CURF is an anonymised selection of microdata from the Australian Census of Population and “Housing”, utilizing a random 1% of person-level records from the Census. At the time of writing data from the 2021 Census is not yet available; we use the 2016 “1% Basic CURF”.\nWe perform a one-time read the CURF from csv and re-write a local copy as fst for fast-loading:\n\nCodecurf <-\n  read_csv(file = here(\"../data/census/micro-data/BCSF16_person_new.csv\"))\nwrite_fst(\"curf\", path = here(\"data/2022/curf/curf_2016.fst\"))\n\n## geo-area data\nsa4_codes <- readxl::read_xls(\n  path = here(\n    \"../data/census/micro-data/data item list - 1 percent basic curf-3.xls\"\n  ),\n  sheet = \"Place of Enumeration\",\n  range = \"C19:E160\",\n  col_names = c(\"AREANUM\", \"description\", \"SA4_class_code\")\n) %>%\n  janitor::remove_empty(., \"rows\") %>%\n  fill(AREANUM, description)\nsave(\"sa4_codes\", file = here(\"data/2022/curf/sa4_codes.RData\"))\n\n\nLoad fst version of the file:\n\nCodecurf <- read_fst(here(\"data/2022/curf/curf_2016.fst\"))\nload(here(\"data/2022/curf/sa4_codes.RData\"))\n\n\nVariable labels and recodes, drawing on XLS file accompanying CURF:\n\nCodecurf_meta <- \n  tribble(\n    ~\"var\", ~\"description\",\n  \"ABSFID\", \"Family Identifier\",\n  \"ABSHID\", \"Household Identifier\",\n  \"ABSPID\", \"Person Identifier\",\n  \"AGEP\",     \"Age of persons\",\n  \"ANC1P\",  \"Ancestry 1st Response\",\n  \"ANC2P\",  \"Ancestry 2nd Response\",\n  \"AREAENUM\",   \"Area of Enumeration\",\n  \"ASSNP\",  \"Core Activity Need for Assistance\",\n  \"BPFP\",   \"Birthplace of Female Parent\",\n  \"BPLP\",   \"Country of Birth of Person\",\n  \"BPMP\",   \"Birthplace of Male Parent\",\n  \"CHCAREP\",    \"Unpaid Child Care\",\n  \"CITP\",   \"Australian Citizenship\",\n  \"CTPP\",   \"Child Type\",\n  \"DOMP\",   \"Unpaid Domestic Work: Number of Hours\",\n  \"DWIP\",   \"Dwelling Indicator for Persons\",\n  \"EMPP\",   \"Number of Employees\",\n  \"ENGP\",   \"Proficiency in Spoken English\",\n  \"FTPP\",   \"Form Type\",\n  \"GNGP\",   \"Public/Private Employer Indicator\",\n  \"HRSP\",   \"Hours Worked\",\n  \"HSCP\",   \"Highest Year of School Completed\",\n  \"INCP\",   \"Total Personal Income (weekly)\",\n  \"INDP\",   \"Industry of Employment\",\n  \"INGP\",   \"Indigenous Status\",\n  \"LANP\",   \"Language Spoken at Home\",\n  \"LFSP\",   \"Labour Force Status\",\n  \"MSTP\",   \"Registered Marital Status\",\n  \"MTWP\",   \"Method of Travel to Work\",\n  \"OCCP\",   \"Occupation\",\n  \"QALFP\", \"Non-School Qualification: Field of Study\",\n  \"QALLP\", \"Non-School Qualification: Level of Education\",\n  \"REGU1P\", \"Region of Usual Residence One Year Ago\",\n  \"REGU5P\", \"Region of Usual Residence Five Years Ago\",\n  \"REGUCP\", \"Region of Usual Residence on Census Night\",\n  \"RELP\",   \"Religious Affiliation\",\n  \"RLHP\",   \"Relationship in Household\",\n  \"RPIP\",   \"Family/Household Reference Person Indicator\",\n  \"SEXP\",   \"Sex\",\n  \"SIEMP\", \"Status in employment\",\n  \"STATEUR\", \"State of Usual Residence\",\n  \"STUP\",   \"Full/Part Time Student Status\",\n  \"TISP\",   \"Number of Children Ever Born\",\n  \"TYPP\",   \"Type of Educational Institution Attending\",\n  \"UAI1P\",  \"Usual Address One Year Ago Indicator\",\n  \"UAI5P\",  \"Usual Address Five Years Ago Indicator\",\n  \"UAICP\",  \"Usual Address Indicator Census Night\",\n  \"UNCAREP\", \"Unpaid Assistance to a Person with a Disability\",\n  \"VOLWP\",  \"Voluntary Work for an Organisation or Group\",\n  \"YARP\",   \"Year of Arrival in Australia\"\n)\n\n## recodes\ncurf <- curf %>% \n  \n  select(-ABSFID,-ABSHID,-ABSPID) %>% \n  \n  mutate(\n    \n    AGEP = case_match(\n      AGEP,\n      0:24  ~ as.character(AGEP),\n      25 ~ \"25-29\",\n      26 ~ \"30-34\",\n      27 ~ \"35-39\",\n      28 ~ \"40-44\",\n      29 ~ \"45-49\",\n      30 ~ \"50-54\",\n      31 ~ \"55-59\",\n      32 ~ \"60-64\",\n      33 ~ \"65-69\",\n      34 ~ \"70-74\",\n      35 ~ \"75-79\",\n      36 ~ \"80-84\",\n      37 ~ \"85>\"\n    ),\n    \n    AGEP = if_else(nchar(AGEP) == 1,\n                   paste0(\" \",AGEP),\n                   AGEP),\n                                  \n    BPLP = case_match(\n      BPLP,\n      1 ~ \"Australia\",\n      2 ~ \"New Zealand\",\n      3 ~ \"United Kingdom, Channel Islands & Isle of Man\",\n      4 ~ \"Germany\",\n      5 ~ \"Italy\",\n      6 ~ \"Greece\",\n      7 ~ \"Vietnam\",\n      8 ~ \"Philippines\",\n      9 ~ \"China (excl. SARs and Taiwan)\",\n      10 ~ \"India\",\n      11 ~ \"Oceania and Antarctica (excl. Australia, New Zealand)\",\n      12    ~ \"North-West Europe (excl. United Kingdom, Channel Islands, Isle of Man, Germany)\",\n      13    ~ \"Southern and Eastern Europe (excl. Italy, Greece)\",\n      14    ~ \"North Africa and the Middle East\",\n      15    ~  \"South-East Asia (excl. Vietnam, Philippines)\",\n      16    ~ \"North-East Asia (excl. China)\",\n      17    ~ \"Southern and Central Asia (excl. India)\",\n      18    ~ \"Americas\",\n      19    ~ \"Sub-Saharan Africa\",\n      20    ~ \"Inadequately described, At sea, Not stated\",\n      21    ~ \"Overseas visitor\"\n    ),\n    \n    CITP = case_match(\n      CITP,\n      1 ~ \"Australian\",\n      2 ~ \"Not Australian\",\n      3 ~ \"Not stated\",\n      4 ~ \"Overseas visitor\"\n    ),\n    \n    HSCP = case_match(\n      HSCP,\n      1 ~ \"Year 12 or equivalent\",\n      2 ~ \"Year 11 or equivalent\",\n      3 ~ \"Year 10 or below (includes Did not go to school)\",\n      4 ~ \"Not stated\",\n      5 ~ \"Not applicable\",\n      6 ~   \"Overseas visitor\"\n    ),\n    \n    INGP = case_match(\n      INGP,\n      1 ~ \"Non-Indigenous\",\n      2 ~ \"Aboriginal, Torres Strait Islander, or both\",\n      3 ~ \"Not stated\",\n      4 ~ \"Overseas visitor\"\n      ),\n    \n    LFSP = case_match(\n      LFSP,\n      1 ~ \"Employed\",\n      2 ~ \"Unemployed\",\n      3 ~ \"Not in the labour force\",\n      4 ~ \"Not stated\",\n      5 ~ \"Not applicable\",\n      6 ~ \"Overseas visitor\"\n    ),\n    \n    MSTP = case_match(\n      MSTP,\n      1 ~ \"Never married\",\n      2 ~   \"Widowed\",\n      3 ~ \"Divorced\",\n      4 ~ \"Separated\",\n      5 ~ \"Married\",\n      6 ~ \"Not applicable\"\n    ),\n    \n    OCCP = case_match(\n      OCCP,\n      1 ~ \"Managers\",\n      2 ~   \"Professionals\",\n      3 ~ \"Technicians and Trades Workers\",\n      4 ~ \"Community and Personal Service Workers\",\n      5 ~ \"Clerical and Administrative Workers\",\n      6 ~ \"Sales Workers\",\n      7 ~ \"Machinery Operators and Drivers\",\n      8 ~ \"Labourers\",\n      9 ~ \"Inadequately described\",\n      10 ~ \"Not stated\",\n      11 ~ \"Not applicable\",\n      12 ~ \"Overseas visitor\"\n    ),\n    \n    QALLP = case_match(\n      QALLP,\n      1 ~ \"Postgraduate Degree Level\",\n      2 ~ \"Graduate Diploma and Graduate Certificate Level\",\n      3 ~ \"Bachelor Degree Level\",\n      4 ~ \"Advanced Diploma and Diploma Level\",\n      5 ~ \"Certificate Level\",\n      6 ~ \"Level of education inadequately described\",\n      7 ~ \"Level of education not stated\",\n      8 ~ \"Not applicable\",\n      9 ~ \"Overseas visitor\"\n    ),\n    \n    RELP = case_match(\n      RELP,\n      1 ~ \"Buddhism\",\n      2 ~ \"Anglican\",\n      3 ~ \"Baptist\",\n      4 ~ \"Catholic\",\n      5 ~ \"Greek Orthodox\",\n      6 ~ \"Presbyterian\",\n      7 ~ \"Uniting Church\",\n      8 ~ \"Other Christian\",\n      9 ~ \"Hinduism\",\n      10    ~ \"Islam\",\n      11    ~ \"Judaism and Other Religions\",\n      12    ~ \"No Religion (so described)\",\n      13    ~ \"Secular Beliefs and Other Spiritual Beliefs\",\n      14    ~ \"Inadequately described, Not stated\",\n      15    ~ \"Overseas visitor\"\n    ),\n    \n    SEXP = case_match(\n      SEXP,\n      1 ~ \"Male\",\n      2 ~ \"Female\"\n    ),\n    \n    STATEUR = case_match(\n      STATEUR,\n      1 ~   \"NSW\",\n      2 ~ \"VIC\",\n      3 ~ \"QLD\",\n      4 ~ \"SA\",\n      5 ~ \"WA\",\n      6 ~ \"TAS\",\n      7 ~ \"NT\",\n      8 ~ \"ACT\",\n      9 ~ \"2016 Overseas visitor\",\n      10 ~ \"OT, No Usual Address and Migratory/Offshore/Shipping areas\"\n    )\n    \n    ) %>% \n  mutate(\n    across(\n      where(is.double),\n      ~as.character(.)\n      )\n    )\n\n\nWe examine some marginal distributions of variables likely appearing the AES:\n\nCodecurf_marginals <- curf %>% \n  pivot_longer(cols=everything(),names_to = \"var\",values_to = \"value\") %>% \n  count(var,value) %>% \n  group_by(var) %>% \n  mutate(p = n/sum(n)) %>% \n  ungroup()\n\n\n\n\n\n\nCodecurf_marginals_ojs = transpose(curf_ojs_raw)\ncurf_marginals_aq = aq.from(curf_marginals_ojs)\ncurf_meta_aq = aq.from(transpose(curf_meta_raw))\n\nviewof selection = Inputs.select(\n  curf_meta_aq,\n  {\n    value: d => d.var,\n    format: d => d.var + \": \" + d.description,\n    label: \"Select variable\"\n    }\n  )\n\ntab = curf_marginals_aq\n  .join_left(curf_meta_aq)\n  .filter(aq.escape(d => d.var == selection.var))\n  .select(\"value\",\"n\",\"p\")\n  \ntab_shown = Inputs.table(tab,\n  {\n    header: {\n      p: \"%\"\n    },\n    format: {\n      p: x => d3.format(\".1%\")(x)\n    },\n    sort: \"p\",\n    reverse: \"true\",\n    rows: tab.numRows(),\n    maxHeight: (tab.numRows()+1.5)*28\n  }\n)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n2 AES\nWe read the 2022 AES. These data are supplied in stata format with accompanying attributes such as var.labels.\n\nCoded2022_attr <- attributes(\n  readstata13::read.dta13(\n    here(\"data/2022/aes/2790 AES 2022 Datafile - Weighted Final 2022-10-28 copy.dta\"),\n    nonint.factors = TRUE,\n    generate.factors = TRUE\n    )\n  )\n\nlevs <- d2022_attr$label.table\n \nd2022_meta <- tibble(var = d2022_attr$names,\n                     description = d2022_attr$var.labels)\n\nd2022 <- readstata13::read.dta13(\n  here(\n    \"data/2022/aes/2790 AES 2022 Datafile - Weighted Final 2022-10-28 copy.dta\"\n  ),\n  nonint.factors = TRUE,\n  convert.factors = TRUE,\n  generate.factors = TRUE\n) %>%\n  as_tibble() %>%\n  mutate(B9_1 = factor(\n    B9_1,\n    levels = as.vector(levs$B9_1),\n    labels = names(levs$B9_1)\n  )) %>%\n  mutate(dem_house22 = factor(\n    dem_house22,\n    levels = as.vector(levs$dem_house22),\n    labels = names(levs$dem_house22)\n  )) %>%\n  mutate(hvote = B9_1) %>%\n  mutate(\n    hvote_collapsed = case_when(\n      hvote == \"Liberal\" ~ \"Coalition\",\n      hvote == \"Liberal National Party of Queensland\" ~ \"Coalition\",\n      hvote == \"Country Liberals (NT)\" ~ \"Coalition\",\n      hvote == \"National Party\" ~ \"Coalition\",\n      hvote == \"Labor\" ~ \"Labor\",\n      hvote == \"Labor Party (ALP)\" ~ \"Labor\",\n      hvote == \"Greens\" ~ \"Greens\",\n      hvote %in% c(\n        \"Refused\",\n        \"Don't know\",\n        \"Did not vote\",\n        \"Not eligible to vote\",\n        \"No answer\",\n        \"Item skipped\",\n        \"Does not apply\",\n        \"Voted informal / Did not vote\"\n      ) ~ NA_character_,\n      ##hvote == \"No party\" ~ NA_character_,\n      is.na(hvote) ~ NA_character_,\n      TRUE ~ \"Other\"\n    )\n  )\n\n\nA searchable listing of variables in the AES:\n\nCodeojs_define(d2022_meta_raw = d2022_meta)\n\n\n\nCoded2022_meta = transpose(d2022_meta_raw)\nviewof d2022_search = Inputs.search(d2022_meta)\nInputs.table(d2022_search,\n  {\n    header: {\n      var: \"variable\"\n    },\n    rows: 10\n  }\n)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nWe identify AES variables that also appear in the CURF:\n\nCodeaes_var_list <- tribble(\n  ~name,              ~aes_var,        ~curf_var,\n  \"state\",            \"dem_state\",     \"STATEUR\",\n  \"age\",              \"AGE\",           \"AGEP\",\n  \"citizen\",          \"CITIZEN\",       \"CITP\",\n  \"tertiary\",         \"G2\",            \"QALLP\",\n  \"gender\",           \"dem_gender\",    \"SEXP\",\n  \"country_of_birth\", \"H3_1\",          \"BPLP\",\n  \"indigenous\",       \"H4\",            \"INGP\",\n  \"religion\",         \"H6\",            \"RELP\",\n  \"marital_status\",   \"H8\",            \"MSTP\",\n  \"income\",           \"J6\",            \"INCP\",\n  \"occupation\",       \"G5_Code\",       \"OCCP\",\n  \"SA2\",              \"SA2\",           \"AREANUM\"\n)"
  },
  {
    "objectID": "analysis/gan/curf_aes_harmonise.html#searchable-listing-of-variables-in-the-aes",
    "href": "analysis/gan/curf_aes_harmonise.html#searchable-listing-of-variables-in-the-aes",
    "title": "Harmonise CURF with AES 2022",
    "section": "\n3.8 Searchable listing of variables in the AES:",
    "text": "3.8 Searchable listing of variables in the AES:\n\nCodeojs_define(d2022_meta_raw = d2022_meta)\nojs_define(levs_long_raw = levs_long)\n\n\n\nCoded2022_meta = transpose(d2022_meta_raw)\nviewof d2022_search = Inputs.search(d2022_meta)\nInputs.table(d2022_search,\n  {\n    header: {\n      var: \"variable\"\n    },\n    rows: 10\n  }\n)"
  },
  {
    "objectID": "analysis/gan/curf_aes_harmonise.html#aes-variables-with-curf-analogues",
    "href": "analysis/gan/curf_aes_harmonise.html#aes-variables-with-curf-analogues",
    "title": "Harmonise CURF with AES 2022",
    "section": "\n3.9 AES variables with CURF analogues",
    "text": "3.9 AES variables with CURF analogues\nWe revisit this list as we re-code AES vars to match CURF coding. The general idea will be to create a variable in the AES data with the same name and coding scheme as its CURF analogue.\n\nCodeaes_var_list <- tribble(\n  ~name,              ~aes_var,          ~curf_var,   \n  \"state\",            \"STATEUR\",         \"STATEUR\",   \n  \"age\",              \"AGEP\",            \"AGEP\",\n  \"ancestry\",         \"ANCP_collapse\",   \"ANCP_collapse\",\n  \"citizen\",          \"CITP\",            \"CITP\",\n  \"country_of_birth\", \"born_country_three\",          \"born_country_three\",\n  \"gender\",           \"SEXP\",            \"SEXP\",\n  \"university\",       \"UNI\",             \"UNI\",\n  \"indigenous\",       \"INGP_binary\",     \"INGP_binary\",\n  \"religion\",         \"RELP_collapsed\",  \"RELP_collapsed\",\n  \"marital_status\",   \"MSTP\",            \"MSTP\",\n  \"income\",           \"INCP\",            \"INCP\",\n  \"occupation\",       \"G5Code\",          \"OCCP\",\n  \"SA4 grouping\",     \"AREAENUM\",        \"AREAENUM\"\n)\n\nojs_define(aes_var_list_raw = aes_var_list %>% as.data.frame())\n\n\n\nCodeojs_define(d2022_subset_raw =\n             d2022 %>%\n             select(aes_var_list %>% pull(aes_var)\n                    ) %>% \n             as.data.frame()\n           ) \nojs_define(d2022_subset_recoded_raw =\n             d2022 %>%\n             select(any_of(aes_var_list %>% pull(curf_var))) %>%\n             as.data.frame()\n           ) \n\n\n\nCodeaes_var_list = transpose(aes_var_list_raw)\nd2022_subset = transpose(d2022_subset_raw)\nd2022_subset_recoded = transpose(d2022_subset_recoded_raw)\nlevs_long = transpose(levs_long_raw)\n\nviewof aes_curf_join_selection = Inputs.select(\n  aes_var_list,\n  {\n    value: d => d.name,\n    format: d => d.name,\n    label: \"Select variable:\"\n    }\n)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nAES marginal:\n\nCodeaes_curf_comp = aes_var_list\n  .filter(d => d.name == aes_curf_join_selection.name)\n\ntheAESVar = aes_curf_comp.map(d => d.aes_var).toString()\ntheCURFVar = aes_curf_comp.map(d => d.curf_var).toString()\n\naes_freq = aq.from(d2022_subset)\n  .groupby(theAESVar)\n  .count()\n  .rename(aq.names([\"label\",\"n\"]))\n  .derive({var: aq.escape(theAESVar)})\n  .derive({p: d => d.n/op.sum(d.n)})\n  .join_left(aq.from(levs_long))\n  .orderby(\"value\")\n  .select(\"var\",\"label\",\"n\",\"p\")\n\n// AES tab\nInputs.table(aes_freq,\n  {\n    header: {\n      p: \"%\"\n    },\n    format: {\n      p: x => d3.format(\".1%\")(x)\n    },\n    rows: aes_freq.numRows(),\n    maxHeight: (aes_freq.numRows()+1.5)*28\n  }\n)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nCURF marginals:\n\nCodetab2 = curf_marginals_aq\n  .join_left(curf_meta_aq)\n  .filter(aq.escape(d => d.var == theCURFVar))\n  .derive({var: aq.escape(theCURFVar)})\n  .rename(aq.names([\"var\",\"label\"]))\n  .select([\"var\",\"label\",\"n\",\"p\"])\n\n  \n// CURF tab\nInputs.table(tab2,\n  {\n    header: {\n      p: \"%\"\n    },\n    format: {\n      p: x => d3.format(\".1%\")(x)\n    },\n    rows: tab2.numRows(),\n    maxHeight: (tab2.numRows()+1.5)*28\n  }\n)"
  },
  {
    "objectID": "analysis/gan/curf_aes_harmonise.html#cross-walk-from-aes-sa2-names-and-postcodes-to-curf-sa4",
    "href": "analysis/gan/curf_aes_harmonise.html#cross-walk-from-aes-sa2-names-and-postcodes-to-curf-sa4",
    "title": "Harmonise CURF with AES 2022",
    "section": "\n2.1 Cross walk from AES SA2 names and postcodes to CURF SA4",
    "text": "2.1 Cross walk from AES SA2 names and postcodes to CURF SA4\n\nCodelibrary(sf)\naus_geo <- read_sf(\n  here(\n    \"../data/census/geography/ASGS_2021_MAIN_STRUCTURE_GPKG_GDA2020/ASGS_2021_Main_Structure_GDA2020.gpkg\"\n    )\n)\n\npostcodes <- aus_geo %>% \n  st_drop_geometry() %>% \n  select(MB_CODE_2021,\n         starts_with(\"SA4\"),\n         area = AREA_ALBERS_SQKM) %>% \n  left_join(\n    readxl::read_xlsx(\n      here(\"../data/census/geography/POA_2021_AUST.xlsx\")\n      ),\n    by = \"MB_CODE_2021\") %>% \n  group_by(POA_NAME_2021,SA4_NAME_2021) %>%\n  summarise(area = sum(area)) %>%\n  ungroup() %>% \n  group_by(POA_NAME_2021) %>%\n  mutate(area_per = area/sum(area)*100) %>% \n  slice_max(order_by = area_per) %>% \n  ungroup()\n  \nsa2 <- aus_geo %>%\n  st_drop_geometry() %>% \n  select(SA2_NAME_2021,SA4_NAME_2021) %>%\n  distinct() %>% \n  left_join(sa4_codes %>%\n              mutate(SA4_NAME_2021 = str_squish(str_remove(SA4_class_code,\n                                                           pattern = \"^[0-9]{1,}\"))) %>% \n              select(AREAENUM,SA4_NAME_2021),\n            by = \"SA4_NAME_2021\")\n\npostcodes <- postcodes %>% \n  left_join(sa2 %>% \n              distinct(SA4_NAME_2021,AREAENUM),\n            by = c(\"SA4_NAME_2021\"))\n\nsave(\"sa2\",\"postcodes\",\n     file=here(\"data/sa2.RData\"))\n\n\nJoin SA2 to SA4s.\n\nCodeload(here(\"data/sa2.RData\"))\nsa2 <- sa2 %>% \n  left_join(sa4_codes %>% \n              mutate(SA4_NAME_2021 = str_squish(str_remove(SA4_class_code,\n                                                           pattern = \"^[0-9]{1,}\"))),\n            by = \"SA4_NAME_2021\"\n            )\n\n\nLookup SA4s of AES postcodes. Are there are by unmatched PCODE (postcodes) in the AES data?\n\nCoded2022 %>% anti_join(postcodes,by=c(\"PCODE\"=\"POA_NAME_2021\")) %>% select(PCODE,SA2)\n\n# A tibble: 9 × 2\n  PCODE SA2    \n  <chr> <chr>  \n1 0871  Unknown\n2 1640  Unknown\n3 8002  Unknown\n4 6872  Unknown\n5 3724  Unknown\n6 1355  Unknown\n7 0861  Unknown\n8 2001  Unknown\n9 6956  Unknown\n\n\nWe’ll manually hard code these:\n\nCodepostcodes <- bind_rows(\n  postcodes,\n  \n  ## 0870 Alice Springs PO Boxes\n  postcodes %>%\n    filter(POA_NAME_2021 == \"0870\") %>%\n    mutate(POA_NAME_2021 = \"0871\"),\n  \n  ## 1640, French's Forest 2086\n  postcodes %>%\n    filter(POA_NAME_2021 == \"2086\") %>%\n    mutate(POA_NAME_2021 = \"1640\"),\n  \n  ## 8002, East Melbourne 3002\n  postcodes %>%\n    filter(POA_NAME_2021 == \"3002\") %>%\n    mutate(POA_NAME_2021 = \"8002\"),\n  \n  ## West Perth WA 6005, Australia\n  postcodes %>%\n    filter(POA_NAME_2021 == \"6005\") %>%\n    mutate(POA_NAME_2021 = \"6872\"),\n  \n  ## Mansfield VIC 3722, Australia\n  postcodes %>%\n    filter(POA_NAME_2021 == \"3722\") %>%\n    mutate(POA_NAME_2021 = \"3724\"),\n  \n  ## Bondi Junction NSW 2022, Australia\n  postcodes %>%\n    filter(POA_NAME_2021 == \"2022\") %>%\n    mutate(POA_NAME_2021 = \"1355\"),\n  \n  ## Tennant Creek NT 0860, Australia\n  postcodes %>%\n    filter(POA_NAME_2021 == \"0860\") %>%\n    mutate(POA_NAME_2021 = \"0861\"),\n  \n  ## Sydney 2001, Australia\n  postcodes %>%\n    filter(POA_NAME_2021 == \"2000\") %>%\n    mutate(POA_NAME_2021 = \"2001\"),\n  \n  ## Melville WA 6156, Australia\n  postcodes %>%\n    filter(POA_NAME_2021 == \"6156\") %>%\n    mutate(POA_NAME_2021 = \"6956\")\n  \n)\n\nd2022 %>% anti_join(postcodes,by=c(\"PCODE\"=\"POA_NAME_2021\")) %>% select(PCODE,SA2)\n\n# A tibble: 0 × 2\n# … with 2 variables: PCODE <chr>, SA2 <chr>\n\n\nNow join to AES:\n\nCoded2022 <- d2022 %>% \n  left_join(postcodes %>% select(PCODE=POA_NAME_2021,SA4_NAME_2021,AREAENUM))\n\nJoining with `by = join_by(PCODE)`"
  },
  {
    "objectID": "analysis/gan/curf_aes_harmonise.html#geo-codes-and-covariates",
    "href": "analysis/gan/curf_aes_harmonise.html#geo-codes-and-covariates",
    "title": "Harmonise CURF with AES 2022",
    "section": "\n1.1 Geo-codes and covariates",
    "text": "1.1 Geo-codes and covariates\nThe CURF geocodes individuals in groupings of SA4s. We build a data set of these groupings and the corresponding SA4s.\n\nCodesa4_codes <- readxl::read_xls(\n  path = here(\n    \"../data/census/micro-data/data item list - 1 percent basic curf-3.xls\"\n  ),\n  sheet = \"Place of Enumeration\",\n  range = \"C19:E160\",\n  col_names = c(\"AREAENUM\", \"description\", \"SA4_class_code\")\n) %>%\n  janitor::remove_empty(., \"rows\") %>%\n  fill(AREAENUM, description)\nsave(\"sa4_codes\", file = here(\"data/2022/curf/sa4_codes.RData\"))"
  },
  {
    "objectID": "analysis/gan/curf_aes_harmonise.html#curf-recodes",
    "href": "analysis/gan/curf_aes_harmonise.html#curf-recodes",
    "title": "Harmonise CURF with AES 2022",
    "section": "\n1.3 CURF recodes",
    "text": "1.3 CURF recodes\nVariable labels and recodes, drawing on XLS file accompanying CURF:\n\nCodecurf_meta <- \n  tribble(\n    ~\"var\", ~\"description\",\n  \"ABSFID\", \"Family Identifier\",\n  \"ABSHID\", \"Household Identifier\",\n  \"ABSPID\", \"Person Identifier\",\n  \"AGEP\",     \"Age of persons\",\n  \"ANC1P\",  \"Ancestry 1st Response\",\n  \"ANC2P\",  \"Ancestry 2nd Response\",\n  \"AREAENUM\",   \"Area of Enumeration\",\n  \"ASSNP\",  \"Core Activity Need for Assistance\",\n  \"BPFP\",   \"Birthplace of Female Parent\",\n  \"BPLP\",   \"Country of Birth of Person\",\n  \"BPMP\",   \"Birthplace of Male Parent\",\n  \"CHCAREP\",    \"Unpaid Child Care\",\n  \"CITP\",   \"Australian Citizenship\",\n  \"CTPP\",   \"Child Type\",\n  \"DOMP\",   \"Unpaid Domestic Work: Number of Hours\",\n  \"DWIP\",   \"Dwelling Indicator for Persons\",\n  \"EMPP\",   \"Number of Employees\",\n  \"ENGP\",   \"Proficiency in Spoken English\",\n  \"FTPP\",   \"Form Type\",\n  \"GNGP\",   \"Public/Private Employer Indicator\",\n  \"HRSP\",   \"Hours Worked\",\n  \"HSCP\",   \"Highest Year of School Completed\",\n  \"INCP\",   \"Total Personal Income (weekly)\",\n  \"INDP\",   \"Industry of Employment\",\n  \"INGP\",   \"Indigenous Status\",\n  \"LANP\",   \"Language Spoken at Home\",\n  \"LFSP\",   \"Labour Force Status\",\n  \"MSTP\",   \"Registered Marital Status\",\n  \"MTWP\",   \"Method of Travel to Work\",\n  \"OCCP\",   \"Occupation\",\n  \"QALFP\", \"Non-School Qualification: Field of Study\",\n  \"QALLP\", \"Non-School Qualification: Level of Education\",\n  \"REGU1P\", \"Region of Usual Residence One Year Ago\",\n  \"REGU5P\", \"Region of Usual Residence Five Years Ago\",\n  \"REGUCP\", \"Region of Usual Residence on Census Night\",\n  \"RELP\",   \"Religious Affiliation\",\n  \"RLHP\",   \"Relationship in Household\",\n  \"RPIP\",   \"Family/Household Reference Person Indicator\",\n  \"SEXP\",   \"Sex\",\n  \"SIEMP\", \"Status in employment\",\n  \"STATEUR\", \"State of Usual Residence\",\n  \"STUP\",   \"Full/Part Time Student Status\",\n  \"TISP\",   \"Number of Children Ever Born\",\n  \"TYPP\",   \"Type of Educational Institution Attending\",\n  \"UAI1P\",  \"Usual Address One Year Ago Indicator\",\n  \"UAI5P\",  \"Usual Address Five Years Ago Indicator\",\n  \"UAICP\",  \"Usual Address Indicator Census Night\",\n  \"UNCAREP\", \"Unpaid Assistance to a Person with a Disability\",\n  \"VOLWP\",  \"Voluntary Work for an Organisation or Group\",\n  \"YARP\",   \"Year of Arrival in Australia\"\n)\n\n## recodes\ncurf <- curf %>% \n  \n  select(-ABSFID,-ABSHID,-ABSPID) %>% \n  \n  mutate(\n    \n    AGEP = case_match(\n      AGEP,\n      0:24  ~ as.character(AGEP),\n      25 ~ \"25-29\",\n      26 ~ \"30-34\",\n      27 ~ \"35-39\",\n      28 ~ \"40-44\",\n      29 ~ \"45-49\",\n      30 ~ \"50-54\",\n      31 ~ \"55-59\",\n      32 ~ \"60-64\",\n      33 ~ \"65-69\",\n      34 ~ \"70-74\",\n      35 ~ \"75-79\",\n      36 ~ \"80-84\",\n      37 ~ \"85>\"\n    ),\n    \n    AGEP = factor(\n      AGEP,\n      levels = c(\n        as.character(\n          0:24),\n          \"25-29\",\n          \"30-34\",\n          \"35-39\",\n          \"40-44\",\n          \"45-49\",\n          \"50-54\",\n          \"55-59\",\n          \"60-64\",\n          \"65-69\",\n          \"70-74\",\n          \"75-79\",\n          \"80-84\",\n          \"85>\"),\n      ordered = TRUE),\n    \n    ANC1P = case_match(\n      ANC1P,\n      1 ~ \"Australian\",\n      2 ~ \"Australian Aboriginal\",\n      3 ~ \"Maori\",\n      4 ~ \"New Zealander\",\n      5 ~ \"Other Oceanian\",\n      6 ~ \"English\",\n      7 ~ \"Scottish\",\n      8 ~ \"Irish\",\n      9 ~ \"Dutch\",\n      10 ~ \"German\",\n      11    ~ \"Other North-West European\",\n      12    ~ \"Italian\",\n      13    ~ \"Maltese\",\n      14    ~ \"Spanish\",\n      15    ~ \"Croatian\",\n      16    ~ \"Greek\",\n      17    ~ \"Macedonian\",\n      18    ~ \"Serbian\",\n      19    ~ \"Polish\",\n      20    ~ \"Russian\",\n      21    ~ \"Other Southern and Eastern European\",\n      22    ~ \"Lebanese\",\n      23    ~ \"Iranian\",\n      24    ~ \"Turkish\",\n      25    ~ \"Other North African and Middle Eastern\",\n      26    ~ \"Thai\",\n      27    ~ \"Vietnamese\",\n      28    ~ \"Filipino\",\n      29    ~ \"Other South-East Asian\",\n      30    ~ \"Chinese\",\n      31    ~ \"Korean\",\n      32    ~ \"Other North-East Asian\",\n      33    ~ \"Indian\",\n      34    ~ \"Nepalese\",\n      35    ~ \"Pakistani\",\n      36    ~ \"Sri Lankan\",\n      37    ~ \"Other Southern and Central Asian\",\n      38    ~ \"People of the Americas\",\n      39    ~ \"South African\",\n      40    ~ \"Other Sub-Saharan African\",\n      41    ~ \"Inadequately described, Not stated, Other supplementary codes\",\n      42    ~ \"Overseas visitor\"\n    ),\n    \n    ANCP_collapse = case_when(\n      ANC1P == \"English\"  ~ \"English\",\n      ANC1P == \"Irish\" ~ \"Irish\",\n      ANC1P == \"Scottish\" ~ \"Scottish\",\n      ANC1P == \"Italian\" ~ \"Italian\",\n      ANC1P == \"German\" ~ \"German\",\n      ANC1P == \"Chinese\" ~ \"Chinese\",\n      grepl(\"^Australian\",ANC1P) ~ \"Australian\",\n      ANC1P == \"Inadequately described, Not stated, Other supplementary codes\" ~ NA,\n      TRUE ~ \"Other\"\n    ),\n    \n    ANCP_collapse = factor(ANCP_collapse),\n    \n    ANC2P = case_match(\n      ANC2P,\n      1 ~ \"Australian\",\n      2 ~ \"Australian Aboriginal\",\n      3 ~ \"Maori\",\n      4 ~ \"New Zealander\",\n      5 ~ \"Other Oceanian\",\n      6 ~ \"English\",\n      7 ~ \"Scottish\",\n      8 ~ \"Irish\",\n      9 ~ \"Dutch\",\n      10 ~ \"German\",\n      11    ~ \"Other North-West European\",\n      12    ~ \"Italian\",\n      13    ~ \"Maltese\",\n      14    ~ \"Spanish\",\n      15    ~ \"Croatian\",\n      16    ~ \"Greek\",\n      17    ~ \"Macedonian\",\n      18    ~ \"Serbian\",\n      19    ~ \"Polish\",\n      20    ~ \"Russian\",\n      21    ~ \"Other Southern and Eastern European\",\n      22    ~ \"Lebanese\",\n      23    ~ \"Iranian\",\n      24    ~ \"Turkish\",\n      25    ~ \"Other North African and Middle Eastern\",\n      26    ~ \"Thai\",\n      27    ~ \"Vietnamese\",\n      28    ~ \"Filipino\",\n      29    ~ \"Other South-East Asian\",\n      30    ~ \"Chinese\",\n      31    ~ \"Korean\",\n      32    ~ \"Other North-East Asian\",\n      33    ~ \"Indian\",\n      34    ~ \"Nepalese\",\n      35    ~ \"Pakistani\",\n      36    ~ \"Sri Lankan\",\n      37    ~ \"Other Southern and Central Asian\",\n      38    ~ \"People of the Americas\",\n      39    ~ \"South African\",\n      40    ~ \"Other Sub-Saharan African\",\n      41    ~ \"Inadequately described, Not stated, Other supplementary codes\",\n      42    ~ \"Overseas visitor\",\n      43 ~ \"Not applicable\"\n    ),\n    \n    BPLP = case_match(\n      BPLP,\n      1 ~ \"Australia\",\n      2 ~ \"New Zealand\",\n      3 ~ \"United Kingdom, Channel Islands & Isle of Man\",\n      4 ~ \"Germany\",\n      5 ~ \"Italy\",\n      6 ~ \"Greece\",\n      7 ~ \"Vietnam\",\n      8 ~ \"Philippines\",\n      9 ~ \"China (excl. SARs and Taiwan)\",\n      10 ~ \"India\",\n      11 ~ \"Oceania and Antarctica (excl. Australia, New Zealand)\",\n      12    ~ \"North-West Europe (excl. United Kingdom, Channel Islands, Isle of Man, Germany)\",\n      13    ~ \"Southern and Eastern Europe (excl. Italy, Greece)\",\n      14    ~ \"North Africa and the Middle East\",\n      15    ~  \"South-East Asia (excl. Vietnam, Philippines)\",\n      16    ~ \"North-East Asia (excl. China)\",\n      17    ~ \"Southern and Central Asia (excl. India)\",\n      18    ~ \"Americas\",\n      19    ~ \"Sub-Saharan Africa\",\n      20    ~ NA,\n      21    ~ \"Overseas visitor\"\n    ),\n    \n    born_country_three = case_when(\n      BPLP == \"Australia\" ~ \"Australia\",\n      BPLP %in% c(\"New Zealand\",\n                  \"United Kingdom, Channel Islands & Isle of Man\") ~ \"UK/NZ\",\n      BPLP == \"Inadequately described, At sea, Not stated\" ~ NA,\n      is.na(BPLP) ~ NA,\n      TRUE ~ \"Other\"\n    ),\n    \n    born_country_three = factor(born_country_three),\n    \n    CITP = case_match(\n      CITP,\n      1 ~ \"Australian\",\n      2 ~ \"Not Australian\",\n      3 ~ NA,\n      4 ~ \"Not Australian\"\n    ),\n    \n    HSCP = case_match(\n      HSCP,\n      1 ~ \"Year 12 or equivalent\",\n      2 ~ \"Year 11 or equivalent\",\n      3 ~ \"Year 10 or below (includes Did not go to school)\",\n      4 ~ NA,\n      5 ~ \"Not applicable\",\n      6 ~   \"Overseas visitor\"\n    ),\n    \n    INCP_original = case_match(\n      INCP,\n      1 ~ \"Negative income\", \n      2 ~ \"Nil income\", \n      3 ~ \"$1-$7,799\", \n      4 ~ \"$7,800-$15,599\",\n      5 ~ \"$15,600-$20,799\", \n      6 ~ \"$20,800-$25,999\",\n      7 ~ \"$26,000-$33,799\", \n      8 ~ \"$33,800-$41,599\", \n      9 ~ \"$41,600-$51,999\",\n      10 ~ \"$52,000-$64,999\",\n      11 ~ \"$65,000-$77,999\",\n      12 ~ \"$78,000-$90,999\",\n      13 ~ \"$91,000-$103,999\",\n      14 ~ \"$104,000-$155,999\",\n      15 ~ \"$156,000>\",\n      16 ~ \"Not stated\",\n      17 ~ \"Not applicable\",\n      18 ~ \"Overseas visitor\" \n    ),\n    \n    INCP = case_match(\n      INCP,\n      c(1,2,3,4) ~ \"Less than $15,000 per year\",\n      c(4,5,6) ~ \"$15,001 to $25,000 per year\",\n      c(7) ~ \"$25,001 to $35,000 per year\",\n      8 ~ \"$35,001 to $45,000 per year\",\n      c(9,10) ~ \"$45,001 to $60,000 per year\",\n      11 ~ \"$60,001 to $80,000 per year\",\n      c(12,13) ~ \"$80,001 to $100,000 per year\",\n      14 ~ \"$104,000-$155,999\",\n      15 ~ \"$156,000>\",\n      16 ~ NA,\n      17 ~ \"Not applicable\",\n      18 ~ \"Overseas visitor\" \n    ),\n    \n    INCP = factor(\n      INCP,\n      levels = c(\n        \"Less than $15,000 per year\",\n        \"$15,001 to $25,000 per year\",\n        \"$25,001 to $35,000 per year\",\n        \"$35,001 to $45,000 per year\",\n        \"$45,001 to $60,000 per year\",\n        \"$60,001 to $80,000 per year\",\n        \"$80,001 to $100,000 per year\",\n        \"$104,000-$155,999\",\n        \"$156,000>\",\n        \"Not applicable\",\n        \"Overseas visitor\"\n      ),\n      ordered = TRUE\n    ), \n    \n    INGP = case_match(\n      INGP,\n      1 ~ \"Non-Indigenous\",\n      2 ~ \"Aboriginal, Torres Strait Islander, or both\",\n      3 ~ \"Not stated\",\n      4 ~ \"Overseas visitor\"\n      ),\n    \n    INGP_binary = INGP == \"Aboriginal, Torres Strait Islander, or both\",\n    \n    LFSP = case_match(\n      LFSP,\n      1 ~ \"Employed\",\n      2 ~ \"Unemployed\",\n      3 ~ \"Not in the labour force\",\n      4 ~ \"Not stated\",\n      5 ~ \"Not applicable\",\n      6 ~ \"Overseas visitor\"\n    ),\n    \n    MSTP = case_match(\n      MSTP,\n      1 ~ \"Never married\",\n      2 ~   \"Widowed\",\n      c(3,4)    ~ \"Divorced or separated\",\n      5 ~ \"Married\",\n      6 ~ \"Not applicable\"\n    ),\n    \n    MSTP = factor(MSTP),\n    \n    OCCP = case_match(\n      OCCP,\n      1 ~ \"Managers\",\n      2 ~   \"Professionals\",\n      3 ~ \"Technicians and Trades Workers\",\n      4 ~ \"Community and Personal Service Workers\",\n      5 ~ \"Clerical and Administrative Workers\",\n      6 ~ \"Sales Workers\",\n      7 ~ \"Machinery Operators and Drivers\",\n      8 ~ \"Labourers\",\n      9 ~ NA,\n      10 ~ NA,\n      11 ~ \"Not applicable\",\n      12 ~ \"Overseas visitor\"\n    ),\n    \n    QALLP = case_match(\n      QALLP,\n      1 ~ \"Postgraduate Degree Level\",\n      2 ~ \"Graduate Diploma and Graduate Certificate Level\",\n      3 ~ \"Bachelor Degree Level\",\n      4 ~ \"Advanced Diploma and Diploma Level\",\n      5 ~ \"Certificate Level\",\n      6 ~ \"Level of education inadequately described\",\n      7 ~ \"Level of education not stated\",\n      8 ~ \"Not applicable\",\n      9 ~ \"Overseas visitor\"\n    ),\n    \n    UNI = case_when(\n      QALLP %in% c(\"Postgraduate Degree Level\",\n                   \"Graduate Diploma and Graduate Certificate Level\",\n                   \"Bachelor Degree Level\") ~ \"Yes\",\n      TRUE ~ \"No\"\n    ),\n    \n    RELP = case_match(\n      RELP,\n      1 ~ \"Buddhism\",\n      2 ~ \"Anglican\",\n      3 ~ \"Baptist\",\n      4 ~ \"Catholic\",\n      5 ~ \"Greek Orthodox\",\n      6 ~ \"Presbyterian\",\n      7 ~ \"Uniting Church\",\n      8 ~ \"Other Christian\",\n      9 ~ \"Hinduism\",\n      10    ~ \"Islam\",\n      11    ~ \"Judaism and Other Religions\",\n      12    ~ \"No Religion (so described)\",\n      13    ~ \"Secular Beliefs and Other Spiritual Beliefs\",\n      14    ~ NA,\n      15    ~ \"Overseas visitor\"\n    ),\n    \n    RELP_collapsed = case_when(\n      RELP %in% c(\"Anglican\",\n                  \"Baptist\",\n                  \"Uniting Church\") ~ \"Protestant\",\n      \n      RELP %in% c(\"No Religion (so described)\",\n                  \"Secular Beliefs and Other Spiritual Beliefs\") ~ \"No Religion (so described)\",\n                  \n      TRUE ~ RELP  \n    ),\n    \n    RELP_collapsed = factor(RELP_collapsed),\n    \n    SEXP = case_match(\n      SEXP,\n      1 ~ \"Male\",\n      2 ~ \"Female\"\n    ),\n    \n    STATEUR = case_match(\n      STATEUR,\n      1 ~   \"NSW\",\n      2 ~ \"VIC\",\n      3 ~ \"QLD\",\n      4 ~ \"SA\",\n      5 ~ \"WA\",\n      6 ~ \"TAS\",\n      7 ~ \"NT\",\n      8 ~ \"ACT\",\n      9 ~ \"2016 Overseas visitor\",\n      10 ~ \"OT, No Usual Address and Migratory/Offshore/Shipping areas\"\n    )\n    \n    ) %>% \n  mutate(\n    across(\n      where(is.double) | where(is.logical),\n      ~as.character(.)\n      )\n    )\n\nareaenum_info <- sa4_codes %>% distinct(AREAENUM,.keep_all = TRUE) %>% select(AREAENUM,description)\n\ncurf <- curf %>%\n  mutate(\n    AREAENUM = factor(\n      AREAENUM,\n      levels = areaenum_info %>% pull(AREAENUM),\n      labels = areaenum_info %>% pull(description),\n      ordered = TRUE\n      )\n    )"
  },
  {
    "objectID": "analysis/gan/curf_aes_harmonise.html#marginal-distributions-of-variables-likely-appearing-the-aes",
    "href": "analysis/gan/curf_aes_harmonise.html#marginal-distributions-of-variables-likely-appearing-the-aes",
    "title": "Harmonise CURF with AES 2022",
    "section": "\n1.4 Marginal distributions of variables likely appearing the AES:",
    "text": "1.4 Marginal distributions of variables likely appearing the AES:\n\nCodecurf_marginals <- curf %>% \n  pivot_longer(cols = everything(),\n               names_to = \"var\",\n               values_to = \"value\") %>% \n  count(var,value) %>% \n  group_by(var) %>% \n  mutate(p = n/sum(n)) %>% \n  ungroup()\n\n\n\n\n\n\nCodecurf_marginals_ojs = transpose(curf_ojs_raw)\ncurf_marginals_aq = aq.from(curf_marginals_ojs)\ncurf_meta_aq = aq.from(transpose(curf_meta_raw))\n\nviewof selection = Inputs.select(\n  curf_meta_aq,\n  {\n    value: d => d.var,\n    format: d => d.var + \": \" + d.description,\n    label: \"Select variable\"\n    }\n  )\n\ntab = curf_marginals_aq\n  .join_left(curf_meta_aq)\n  .filter(aq.escape(d => d.var == selection.var))\n  .select(\"value\",\"n\",\"p\")\n  \ntab_shown = Inputs.table(tab,\n  {\n    header: {\n      p: \"%\"\n    },\n    format: {\n      p: x => d3.format(\".1%\")(x)\n    },\n    sort: \"p\",\n    reverse: \"true\",\n    rows: tab.numRows(),\n    maxHeight: (tab.numRows()+1.5)*28\n  }\n)"
  },
  {
    "objectID": "analysis/gan/curf_aes_harmonise.html#cross-walk-from-aes-geocodes-sa2s-and-postcodes-to-curf-sa4",
    "href": "analysis/gan/curf_aes_harmonise.html#cross-walk-from-aes-geocodes-sa2s-and-postcodes-to-curf-sa4",
    "title": "Harmonise CURF with AES 2022",
    "section": "\n1.2 Cross walk from AES geocodes (SA2s and postcodes) to CURF SA4",
    "text": "1.2 Cross walk from AES geocodes (SA2s and postcodes) to CURF SA4\nAES supplies postcodes for all respondents (at least in the restricted access version of the file) and some SA1 information.\n\nCodelibrary(sf)\naus_geo <- read_sf(\n  here(\n    \"../data/census/geography/ASGS_2021_MAIN_STRUCTURE_GPKG_GDA2020/ASGS_2021_Main_Structure_GDA2020.gpkg\"\n    )\n)\n\npostcodes <- aus_geo %>% \n  st_drop_geometry() %>% \n  select(MB_CODE_2021,\n         starts_with(\"SA4\"),\n         area = AREA_ALBERS_SQKM) %>% \n  left_join(\n    readxl::read_xlsx(\n      here(\"../data/census/geography/POA_2021_AUST.xlsx\")\n      ),\n    by = \"MB_CODE_2021\") %>% \n  group_by(POA_NAME_2021,SA4_NAME_2021) %>%\n  summarise(area = sum(area)) %>%\n  ungroup() %>% \n  group_by(POA_NAME_2021) %>%\n  mutate(area_per = area/sum(area)*100) %>% \n  slice_max(order_by = area_per) %>% \n  ungroup()\n  \nsa2 <- aus_geo %>%\n  st_drop_geometry() %>% \n  select(SA2_NAME_2021,SA4_NAME_2021) %>%\n  distinct() %>% \n  left_join(sa4_codes %>%\n              mutate(SA4_NAME_2021 = str_squish(str_remove(SA4_class_code,\n                                                           pattern = \"^[0-9]{1,}\"))) %>% \n              select(AREAENUM,SA4_NAME_2021),\n            by = \"SA4_NAME_2021\")\n\nsa_to_postcodes <- postcodes %>% \n  left_join(sa2 %>% \n              distinct(SA4_NAME_2021,AREAENUM),\n            by = c(\"SA4_NAME_2021\"))\n\nsave(\"sa2\",\"sa_to_postcodes\",\n     file = here(\"data/2022/SA2/sa2.RData\"))\n\n\nJoin SA2 to SA4s.\n\nCodeload(here(\"data/2022/curf/sa4_codes.RData\"))\nload(here(\"data/2022/SA2/sa2.RData\"))\nsa2 <- sa2 %>% \n  left_join(sa4_codes %>% \n              mutate(SA4_NAME_2021 = str_squish(str_remove(SA4_class_code,\n                                                           pattern = \"^[0-9]{1,}\"))),\n            by = \"SA4_NAME_2021\"\n            )"
  },
  {
    "objectID": "analysis/gan/curf_aes_harmonise.html#occupation-codes",
    "href": "analysis/gan/curf_aes_harmonise.html#occupation-codes",
    "title": "Harmonise CURF with AES 2022",
    "section": "\n3.1 Occupation codes",
    "text": "3.1 Occupation codes\nWe pick up ANZSCO codes from the public release of the data:\n\nCoded2022_public <- read_csv(\n  here(\"data/2022/aes/aes22_unrestricted_v2.csv\")\n) %>% select(Respondent_ID = ID,G5_Code)\n\nRows: 2508 Columns: 368\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr   (33): ID, A12_Order, A13_Order, B1_other, B9_1_other, B9_2_other, C2_O...\ndbl  (334): ID_2019, ID_2016, Mode, STATE, sampsrc, accesstype, PANEL_FLAG, ...\ndate   (1): IntDate\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\nCoded2022 <- d2022 %>%\n  left_join(d2022_public,\n            by = \"Respondent_ID\") %>%\n  rename(G5Code_raw = G5_Code.x,\n         G5Code = G5_Code.y) %>%\n  mutate(G5Code = factor(\n    G5Code,\n    levels = c(1:8, 9970, 9990, 99999),\n    labels = c(\n      \"Managers\",\n      \"Professionals\",\n      \"Technicians and Trades Workers\",\n      \"Community and Personal Service Workers\",\n      \"Sales Workers\",\n      \"Machinery Operators and Drivers\",\n      \"Labourers\",\n      \"Inadequately described\",\n      \"Not applicable\",\n      \"Not applicable\",\n      \"Item skipped\"\n      )\n    )\n  )"
  },
  {
    "objectID": "analysis/gan/curf_aes_harmonise.html#vote-recode",
    "href": "analysis/gan/curf_aes_harmonise.html#vote-recode",
    "title": "Harmonise CURF with AES 2022",
    "section": "\n3.2 Vote recode",
    "text": "3.2 Vote recode\n\nCoded2022 <- d2022 %>% \n  mutate(hvote = B9_1) %>%\n  mutate(\n    hvote_collapsed = case_when(\n      hvote == \"Liberal\" ~ \"Coalition\",\n      hvote == \"Liberal National Party of Queensland\" ~ \"Coalition\",\n      hvote == \"Country Liberals (NT)\" ~ \"Coalition\",\n      hvote == \"National Party\" ~ \"Coalition\",\n      hvote == \"Labor\" ~ \"Labor\",\n      hvote == \"Labor Party (ALP)\" ~ \"Labor\",\n      hvote == \"Greens\" ~ \"Greens\",\n      hvote %in% c(\"No party\",\"Independent\") ~ \"Independent\",\n      hvote == \"Not eligible to vote\" ~ \"Not eligible to vote\",\n      hvote == \"Voted informal / Did not vote\" ~ \"Not vote or informal\",\n      hvote == \"Did not vote\" ~ \"Not vote or informal\",\n      hvote %in% c(\n        \"Refused\",\n        \"Don't know\",\n        \"No answer\",\n        \"Item skipped\",\n        \"Does not apply\"\n      ) ~ NA_character_,\n      ##hvote == \"No party\" ~ NA_character_,\n      is.na(hvote) ~ NA_character_,\n      TRUE ~ \"Other\"\n    ),\n    \n    hvote_collapsed = factor(\n      hvote_collapsed\n    )\n  )\n\nkable(\n  xtabs(\n    ~ hvote + hvote_collapsed,\n    subset = NULL,\n    exclude = NULL,\n    data = d2022\n    )\n) %>% \n  kable_styling(full_width = TRUE)\n\n\n\n\n   \n    Coalition \n    Greens \n    Independent \n    Labor \n    Other \n  \n\n\n Liberal \n    800 \n    0 \n    0 \n    0 \n    0 \n  \n\n Labor \n    0 \n    0 \n    0 \n    917 \n    0 \n  \n\n National Party \n    75 \n    0 \n    0 \n    0 \n    0 \n  \n\n Greens \n    0 \n    348 \n    0 \n    0 \n    0 \n  \n\n Other party (please specify) \n    0 \n    0 \n    0 \n    0 \n    6 \n  \n\n No party \n    0 \n    0 \n    61 \n    0 \n    0 \n  \n\n Australian Democrats \n    0 \n    0 \n    0 \n    0 \n    0 \n  \n\n Christian Democratic Party \n    0 \n    0 \n    0 \n    0 \n    0 \n  \n\n Citizens Electoral Council \n    0 \n    0 \n    0 \n    0 \n    0 \n  \n\n Family First Party \n    0 \n    0 \n    0 \n    0 \n    2 \n  \n\n Pauline Hanson's One Nation \n    0 \n    0 \n    0 \n    0 \n    30 \n  \n\n Republican Party (replaced by Republican Party of Australia) \n    0 \n    0 \n    0 \n    0 \n    1 \n  \n\n Shooters, Fishers and Farmers Party \n    0 \n    0 \n    0 \n    0 \n    2 \n  \n\n Fishing Party \n    0 \n    0 \n    0 \n    0 \n    1 \n  \n\n United Australia Party (formerly Palmer's United Party) \n    0 \n    0 \n    0 \n    0 \n    20 \n  \n\n Katter's Australia Party \n    0 \n    0 \n    0 \n    0 \n    1 \n  \n\n Liberal Democrats \n    0 \n    0 \n    0 \n    0 \n    11 \n  \n\n Motoring Enthusiasts Party \n    0 \n    0 \n    0 \n    0 \n    0 \n  \n\n Australian Sports Party (dissolved in 2015) \n    0 \n    0 \n    0 \n    0 \n    0 \n  \n\n Reason Party (formerly The Australian Sex Party) \n    0 \n    0 \n    0 \n    0 \n    1 \n  \n\n The Wikileaks Party (dissolved in 2015) \n    0 \n    0 \n    0 \n    0 \n    0 \n  \n\n Australian Christians \n    0 \n    0 \n    0 \n    0 \n    2 \n  \n\n Derryn Hinch's Justice Party \n    0 \n    0 \n    0 \n    0 \n    1 \n  \n\n Centre Alliance (formerly Nick Xenophon Team) \n    0 \n    0 \n    0 \n    0 \n    2 \n  \n\n Rise Up Australia \n    0 \n    0 \n    0 \n    0 \n    0 \n  \n\n Science Party \n    0 \n    0 \n    0 \n    0 \n    0 \n  \n\n Australian Liberty Alliance \n    0 \n    0 \n    0 \n    0 \n    0 \n  \n\n Pirate Party \n    0 \n    0 \n    0 \n    0 \n    0 \n  \n\n Jacquie Lambie Network \n    0 \n    0 \n    0 \n    0 \n    0 \n  \n\n Arts Party \n    0 \n    0 \n    0 \n    0 \n    0 \n  \n\n Animal Justice Party \n    0 \n    0 \n    0 \n    0 \n    4 \n  \n\n Australian Cyclists Party \n    0 \n    0 \n    0 \n    0 \n    0 \n  \n\n Health Australia Party \n    0 \n    0 \n    0 \n    0 \n    0 \n  \n\n Affordable Housing Party \n    0 \n    0 \n    0 \n    0 \n    0 \n  \n\n Australia First Party \n    0 \n    0 \n    0 \n    0 \n    1 \n  \n\n Australian Better Families \n    0 \n    0 \n    0 \n    0 \n    0 \n  \n\n Australian Conservatives \n    0 \n    0 \n    0 \n    0 \n    0 \n  \n\n Australian People's Party \n    0 \n    0 \n    0 \n    0 \n    0 \n  \n\n Australian Progressives \n    0 \n    0 \n    0 \n    0 \n    0 \n  \n\n Australian Workers Party \n    0 \n    0 \n    0 \n    0 \n    0 \n  \n\n Child Protection Party \n    0 \n    0 \n    0 \n    0 \n    0 \n  \n\n Climate Action! Immigration Action! Accountable Politicians! \n    0 \n    0 \n    0 \n    0 \n    0 \n  \n\n Country Liberals (NT) \n    0 \n    0 \n    0 \n    0 \n    0 \n  \n\n Democratic Labour Party \n    0 \n    0 \n    0 \n    0 \n    1 \n  \n\n Fraser Anning'S Conservative National Party \n    0 \n    0 \n    0 \n    0 \n    0 \n  \n\n Help End Marijuana Prohibition (HEMP) Party \n    0 \n    0 \n    0 \n    0 \n    0 \n  \n\n Independents For Climate Action Now \n    0 \n    0 \n    0 \n    0 \n    0 \n  \n\n Involuntary Medication Objectors (Vaccination/Fluoride) Party \n    0 \n    0 \n    0 \n    0 \n    0 \n  \n\n Labour DLP \n    0 \n    0 \n    0 \n    0 \n    0 \n  \n\n Liberal National Party of Queensland \n    0 \n    0 \n    0 \n    0 \n    0 \n  \n\n Love Australia or Leave \n    0 \n    0 \n    0 \n    0 \n    0 \n  \n\n Non-Custodial Parents Party (Equal Parenting) \n    0 \n    0 \n    0 \n    0 \n    0 \n  \n\n Secular Party of Australia \n    0 \n    0 \n    0 \n    0 \n    0 \n  \n\n Seniors United Party of Australia \n    0 \n    0 \n    0 \n    0 \n    0 \n  \n\n Socialist Alliance \n    0 \n    0 \n    0 \n    0 \n    1 \n  \n\n Socialist Equality Party \n    0 \n    0 \n    0 \n    0 \n    0 \n  \n\n Sustainable Australia \n    0 \n    0 \n    0 \n    0 \n    0 \n  \n\n The Australian Mental Health Party \n    0 \n    0 \n    0 \n    0 \n    0 \n  \n\n The Great Australian Party \n    0 \n    0 \n    0 \n    0 \n    3 \n  \n\n The Small Business Party \n    0 \n    0 \n    0 \n    0 \n    0 \n  \n\n The Together Party \n    0 \n    0 \n    0 \n    0 \n    0 \n  \n\n Victorian Socialists \n    0 \n    0 \n    0 \n    0 \n    0 \n  \n\n VOTEFLUX.ORG | Upgrade Democracy! \n    0 \n    0 \n    0 \n    0 \n    0 \n  \n\n WESTERN AUSTRALIA PARTY \n    0 \n    0 \n    0 \n    0 \n    1 \n  \n\n Yellow Vest Australia \n    0 \n    0 \n    0 \n    0 \n    0 \n  \n\n Australian Citizens Party \n    0 \n    0 \n    0 \n    0 \n    0 \n  \n\n Australian Federation Party \n    0 \n    0 \n    0 \n    0 \n    2 \n  \n\n Australian Values Party \n    0 \n    0 \n    0 \n    0 \n    0 \n  \n\n David Pocock \n    0 \n    0 \n    0 \n    0 \n    1 \n  \n\n Drew Pavlou Democratic Alliance \n    0 \n    0 \n    0 \n    0 \n    0 \n  \n\n FUSION: Science, Pirate, Secular, Climate Emergency \n    0 \n    0 \n    0 \n    0 \n    2 \n  \n\n Federal ICAC Now \n    0 \n    0 \n    0 \n    0 \n    0 \n  \n\n Indigenous - Aboriginal Party of Australia \n    0 \n    0 \n    0 \n    0 \n    1 \n  \n\n Informed Medical Options Party \n    0 \n    0 \n    0 \n    0 \n    1 \n  \n\n Rex Patrick Team \n    0 \n    0 \n    0 \n    0 \n    0 \n  \n\n TNL \n    0 \n    0 \n    0 \n    0 \n    0 \n  \n\n The Local Party of Australia \n    0 \n    0 \n    0 \n    0 \n    0 \n  \n\n Swing Voter \n    0 \n    0 \n    0 \n    0 \n    0 \n  \n\n Independent \n    0 \n    0 \n    129 \n    0 \n    0 \n  \n\n Other party (not specified) \n    0 \n    0 \n    0 \n    0 \n    7 \n  \n\n Does not apply \n    0 \n    0 \n    0 \n    0 \n    0 \n  \n\n Item skipped \n    0 \n    0 \n    0 \n    0 \n    0"
  },
  {
    "objectID": "analysis/gan/curf_aes_harmonise.html#collapse-religion",
    "href": "analysis/gan/curf_aes_harmonise.html#collapse-religion",
    "title": "Harmonise CURF with AES 2022",
    "section": "\n3.3 Collapse religion",
    "text": "3.3 Collapse religion\n\nCoded2022 <- d2022 %>%\n  mutate(\n    RELP_collapsed = case_when(\n      grepl(\"Catholic\", H6) ~ \"Catholic\",\n      H6 == \"Baptist\" ~ \"Protestant\",\n      H6 %in% c(\n        \"Churches of Christ\",\n        \"Latter Day Saints\",\n        \"Lutheran\",\n        \"Salvation Army\",\n        \"Pentecostalism\",\n        \"Christian (Specified)\",\n        \"Seventh Day Adventist\",\n        \"Other Protestant\",\n        \"Other Christian\"\n      ) ~ \"Other Christian\",\n      H6 == \"Buddhist\" ~ \"Buddhism\",\n      H6 == \"Anglican / Church of England\" ~ \"Protestant\",\n      H6 == \"Hebrew/Jewish\" ~ \"Judaism and Other Religions\",\n      H6 == \"Muslim\" ~ \"Islam\",\n      H6 == \"Other Non-Christian\" ~ \"Judaism and Other Religions\",\n      H6 == \"Hindu\" ~ \"Hinduism\",\n      H6 == \"Uniting Church / Methodist\" ~ \"Protestant\",\n      H6 == \"Orthodox Church\" ~ \"Greek Orthodox\",\n      H6 == \"Presbyterian\" ~ \"Presbyterian\",\n      H6 == \"Other (please specify)\" ~ \"Judaism and Other Religions\",\n      H6 == \"No religion\" ~ \"No Religion (so described)\",\n      H6 == \"Item skipped\" ~ NA,\n      is.na(H6) ~ NA\n    ),\n    \n    RELP_collapsed = factor(RELP_collapsed)\n  )"
  },
  {
    "objectID": "analysis/gan/curf_aes_harmonise.html#miscellaneous-others",
    "href": "analysis/gan/curf_aes_harmonise.html#miscellaneous-others",
    "title": "Harmonise CURF with AES 2022",
    "section": "\n3.4 Miscellaneous others",
    "text": "3.4 Miscellaneous others\n\nCoded2022 <- d2022 %>%\n  mutate(\n    G3 = factor(\n      G3,\n      levels = c(\n        \"No qualification since leaving school\",\n        \"Trade qualification\",\n        \"Non-trade qualification\",\n        \"Associate Diploma\",\n        \"Undergraduate Diploma\",\n        \"Bachelor Degree (including Honours)\",\n        \"Postgraduate Degree or Postgraduate Diploma\"\n      ),\n      ordered = TRUE\n    ),\n    \n    J6  = factor(\n      J6,\n      levels = setdiff(names(levs$J6), \"Item skipped\"),\n      ordered = TRUE\n    ),\n    \n    J6 = as.numeric(J6),\n    \n    BPLP = case_when(\n      H3_1 == \"Australia\" ~ \"Australia\",\n      H3_1 == \"Australia (includes External Territories)\" ~ \"Australia\",\n      H3_1 %in% c(\"1200\", \"New Zealand\") ~ \"New Zealand\",\n      H3_1 == \"2200\" ~ \"North-West Europe (excl. United Kingdom, Channel Islands, Isle of Man, Germany)\",\n      H3_1 == \"United Kingdom, Channel Islands and Isle of Man\" ~ \"United Kingdom, Channel Islands and Isle of Man\",\n      H3_1 == \"Item skipped\" ~ \"Inadequately described, At sea, Not stated\",\n      H3_1 == \"India\" ~ \"India\",\n      H3_1 == \"South Africa\" ~ \"Sub-Saharan Africa\",\n      H3_1 == \"Philippines\" ~ \"Philippines\",\n      H3_1 == \"China (excludes SARs and Taiwan)\" ~ \"China (excl. SARs and Taiwan)\",\n      H3_1 == \"Vietnam\" ~ \"Vietnam\",\n      H3_1 == \"Germany\" ~ \"Germany\",\n      H3_1 == \"Netherlands\" ~ \"North-West Europe (excl. United Kingdom, Channel Islands, Isle of Man, Germany)\",\n      H3_1 == \"Malaysia\" ~ \"South-East Asia (excl. Vietnam, Philippines)\",\n      H3_1 == \"Italy\" ~ \"Italy\",\n      \n      H3_1 %in% c(\"Sri Lanka\", \"Pakistan\", \"Nepal\", \"Afghanistan\", \"Tajikistan\") ~\n        \"Southern and Central Asia (excl. India)\",\n      \n      H3_1 == \"Canada\" ~ \"Americas\",\n      H3_1 == \"Hong Kong (SAR of China)\" ~ \"North-East Asia (excl. China)\",\n      H3_1 == \"Ireland\" ~ \"North-West Europe (excl. United Kingdom, Channel Islands, Isle of Man, Germany)\",\n      H3_1 == \"Greece\" ~ \"Greece\",\n      H3_1 == \"Singapore\" ~ \"South-East Asia (excl. Vietnam, Philippines)\",\n      H3_1 == \"Malta\" ~ \"Southern and Eastern Europe (excl. Italy, Greece)\",\n      H3_1 == \"Indonesia\" ~ \"South-East Asia (excl. Vietnam, Philippines)\",\n      H3_1 == \"Taiwan\" ~ \"North-East Asia (excl. China)\",\n      H3_1 == \"Fiji\" ~ \"Oceania and Antarctica (excl. Australia, New Zealand)\",\n      H3_1 == \"Croatia\" ~ \"Southern and Eastern Europe (excl. Italy, Greece)\",\n      H3_1 == \"Hungary\" ~ \"Southern and Eastern Europe (excl. Italy, Greece)\",\n      H3_1 == \"Mauritius\" ~ \"Sub-Saharan Africa\",\n      \n      H3_1 %in% c(\n        \"Ghana\",\n        \"Lesotho\",\n        \"Kenya\",\n        \"Nigeria\",\n        \"Tanzania\",\n        \"Uganda\",\n        \"Zimbabwe\",\n        \"Zambia\"\n      ) ~ \"Sub-Saharan Africa\",\n      \n      H3_1 == \"Poland\" ~ \"Southern and Eastern Europe (excl. Italy, Greece)\",\n      \n      H3_1 %in% c(\"Egypt\", \"Israel\", \"Lebanon\", \"Jordan\", \"Kuwait\", \"Syria\") ~ \"North Africa and the Middle East\",\n      \n      H3_1 %in% c(\"Japan\", \"Japan and the Koreas\", \"Mongolia\") ~ \"North-East Asia (excl. China)\",\n      \n      H3_1 == \"Korea, Republic of (South)\" ~ \"North-East Asia (excl. China)\",\n      H3_1 == \"Bangladesh\" ~ \"Southern and Central Asia (excl. India)\",\n      \n      H3_1 %in% c(\n        \"United States of America\",\n        \"Brazil\",\n        \"Chile\",\n        \"Mexico\",\n        \"Peru\",\n        \"Argentina\",\n        \"Columbia\",\n        \"Paraguay\",\n        \"Venezuela, Bolivarian Republic of\",\n        \"Nicaragua\",\n        \"Bolivia, Plurinational State of\",\n        \"Uruguay\"\n      ) ~ \"Americas\",\n      \n      H3_1 == \"Inadequately described\" ~ \"Inadequately described, At sea, Not stated\",\n      H3_1 == \"Papua New Guinea\" ~ \"Oceania and Antarctica (excl. Australia, New Zealand)\",\n      \n      H3_1 %in% c(\"England\", \"Northern Ireland\", \"Wales\", \"Scotland\", \"Guernsey\") ~\n        \"United Kingdom, Channel Islands and Isle of Man\",\n      \n      H3_1 %in% c(\"Austria\", \"Switzerland\") ~ \"North-West Europe (excl. United Kingdom, Channel Islands, Isle of Man, Germany)\",\n      \n      H3_1 == \"Serbia\" ~ \"Southern and Eastern Europe (excl. Italy, Greece)\",\n      H3_1 == \"Ukraine\" ~ \"Southern and Eastern Europe (excl. Italy, Greece)\",\n      H3_1 == \"Iran\" ~ \"North Africa and the Middle East\",\n      H3_1 == \"Turkey\" ~ \"North Africa and the Middle East\",\n      \n      H3_1 %in% c(\"Laos\", \"Thailand\") ~ \"South-East Asia (excl. Vietnam, Philippines)\",\n      \n      H3_1 %in% c(\"Former USSR, nfd\", \"Former Yugoslavia, nfd\") ~ \"Southern and Eastern Europe (excl. Italy, Greece)\",\n      \n      H3_1 %in% c(\n        \"Spain\",\n        \"Portugal\",\n        \"Cyprus\",\n        \"Romania\",\n        \"Estonia\",\n        \"Russian Federation\",\n        \"Slovakia\",\n        \"Former Yugoslav Republic of Macedonia (FYROM)\"\n      ) ~\n        \"Southern and Eastern Europe (excl. Italy, Greece)\",\n      \n      H3_1 == \"Sudan\" ~ \"North Africa and the Middle East\",\n      H3_1 == \"Myanmar, The Republic of the Union of\" ~ \"South-East Asia (excl. Vietnam, Philippines)\"\n    ),\n    \n    \n    born_country_three = case_when(\n      BPLP == \"Australia\" ~ \"Australia\",\n      BPLP %in% c(\n        \"United Kingdom, Channel Islands and Isle of Man\",\n        \"New Zealand\") ~ \"UK/NZ\",\n      is.na(H3_1) | H3_1 == \"Item skipped\" ~ \"Unknown\",\n      TRUE ~ \"Other\"\n    )\n    \n  )"
  },
  {
    "objectID": "analysis/gan/curf_aes_harmonise.html#geo-coding",
    "href": "analysis/gan/curf_aes_harmonise.html#geo-coding",
    "title": "Harmonise CURF with AES 2022",
    "section": "\n3.6 Geo-coding",
    "text": "3.6 Geo-coding\nSeveral tasks here:\n\nValidate match AES postcodes.\nLookup SA4s of AES postcodes.\n\nMerge Census POA (postcode) variables and principal components onto AES.\n\n\n3.6.1 Are there unmatched PCODE (postcodes) in the AES data?\n\nCodeload(here(\"data/2022/POA/poa_prcomp.RData\"))\nkable(\n  d2022 %>% \n  anti_join(poa_prcomp %>%\n              mutate(PCODE = str_remove(pattern = \"^POA\",POA_CODE_2021)),\n            by = \"PCODE\") %>%\n  select(PCODE) %>%\n  distinct()\n) %>% \n  kable_styling(font_size = 9, full_width = TRUE)\n\n\n\n\n PCODE \n  \n\n\n 0871 \n  \n\n 1640 \n  \n\n 8002 \n  \n\n 6872 \n  \n\n 3724 \n  \n\n 1355 \n  \n\n 0861 \n  \n\n 2001 \n  \n\n 6956 \n  \n\n\n\n\nWe’ll manually hard code these:\n\nCodepostcode_remap <- tribble(\n  ~PCODE_ORIG, ~PCODE,\n  \"0871\", \"0870\",\n  \"1640\", \"2086\",\n  \"8002\", \"3002\",\n  \"6872\", \"6005\",\n  \"3724\", \"3722\",\n  \"1355\", \"2022\",\n  \"0861\", \"0860\",\n  \"2001\", \"2000\",\n  \"6956\", \"6156\"\n)\n\nd2022 <- d2022 %>% \n  rename(PCODE_ORIG = PCODE) %>% \n  left_join(postcode_remap, by = \"PCODE_ORIG\") %>% \n  mutate(PCODE = if_else(is.na(PCODE),PCODE_ORIG,PCODE))\n\n\n\n3.6.2 Add SA4 agglomerations AREAENUM geocodes to match CURF\n\nCoded2022 <- d2022 %>% \n  left_join(\n        sa_to_postcodes %>%\n          select(PCODE = POA_NAME_2021,AREAENUM),\n        by = \"PCODE\"\n        ) %>% \n   mutate(\n    AREAENUM = factor(\n      AREAENUM,\n      levels = areaenum_info %>% pull(AREAENUM),\n      labels = areaenum_info %>% pull(description),\n      ordered = TRUE\n      )\n    )\n\n\n\n3.6.3 POA covariates\nWe add POA-level Census variables, or rather, the 1st 10 principal components extracted from thousands of POA level Census variables provided by ABS in POA General Community Profiles (GCP); see the analysis code/poa_features.R for details.\nWe also add various rates and medians provided in Table G02 of the ABS POA GCP files.\n\nCodeload(here(\"data/2022/POA/poa_prcomp.RData\"))\nd2022 <- d2022 %>% \n  left_join(poa_prcomp %>%\n              mutate(PCODE = str_remove(POA_CODE_2021,\"POA\")),\n            by = \"PCODE\")"
  },
  {
    "objectID": "analysis/gan/curf_aes_harmonise.html#patch-missing-data",
    "href": "analysis/gan/curf_aes_harmonise.html#patch-missing-data",
    "title": "Harmonise CURF with AES 2022",
    "section": "\n3.8 Patch missing data",
    "text": "3.8 Patch missing data\nWe have a small amount of missing data in AES in some of the columns that we will match to the CURF. We use the mice package to patch these. We run this code chunk once and save the results.\n\nCodelibrary(mice)\nmissingRecode <- function(x) {\n  z <- if_else(grepl(pattern = \"item skipped\",\n                     tolower(as.character(x))),\n               NA,\n               x)\n  if (is.factor(z)) {\n    z <- fct_drop(z)\n  }\n  \n  return(z)\n}\n\nd2022 <- d2022 %>% \n  mutate(\n    across(\n      where(is.factor) | where(is.character), \n      ~missingRecode(.x)\n      )\n    )\n\nd2022_for_imp <- d2022 %>%\n  select(matches(\"^PC[0-9]{1,2}\"),\n         ends_with(\"G02\"),\n         any_of(\n           c(\n             aes_var_list %>% pull(aes_var),\n             \"hvote_collapsed\",\n             \"sampsrc\",\n             \"A1\",\n             \"A10\",\n             \"C5\",\n             \"C6\",\n             \"J2\",\n             \"J4\"\n           )\n         )) %>% \n  janitor::remove_constant() %>% \n  janitor::remove_empty(\"cols\")\n\nd2022_for_imp <- d2022_for_imp %>% \n  mutate(AGE = as.numeric(AGE)) %>% \n  select(-any_of(c(\"H3_1\",\"H6\"))) %>% \n  mutate(across(where(is.character) & !where(is.factor),\n                ~factor(.x)))\n\nmissTab <- d2022_for_imp %>% \n  summarise(\n    across(\n      everything(),\n      ~mean( is.na(.x) )\n      )\n    ) %>%\n  pivot_longer(cols = everything()) %>%\n  arrange(desc(value)) \n\nnlevels_tab <-\n  d2022_for_imp %>%\n  summarise(across(everything(),  ~ length(unique(.x)))) %>%\n  pivot_longer(cols = everything())\n\nmiss_info <- left_join(missTab,\n                       nlevels_tab,\n                       by = \"name\") %>%\n  left_join(d2022_for_imp %>%\n              summarise(across(everything(),  ~ class(.x)[1])) %>%\n              pivot_longer(cols = everything()),\n            by = \"name\")\n\nkable(\n  miss_info %>% arrange(desc(value.x))\n) %>% \n  kable_styling(full_width = TRUE)\n\n\n\n\n name \n    value.x \n    value.y \n    value \n  \n\n\n H4a \n    0.1893939 \n    9 \n    factor \n  \n\n G5Code \n    0.0972887 \n    10 \n    factor \n  \n\n J6 \n    0.0733652 \n    14 \n    numeric \n  \n\n AGE \n    0.0330941 \n    81 \n    numeric \n  \n\n hvote_collapsed \n    0.0291069 \n    6 \n    factor \n  \n\n J4 \n    0.0279107 \n    5 \n    factor \n  \n\n J2 \n    0.0275120 \n    3 \n    factor \n  \n\n G3 \n    0.0263158 \n    8 \n    ordered \n  \n\n H8 \n    0.0251196 \n    5 \n    factor \n  \n\n H4 \n    0.0211324 \n    3 \n    factor \n  \n\n C6 \n    0.0099681 \n    5 \n    factor \n  \n\n C5 \n    0.0035885 \n    5 \n    factor \n  \n\n A10 \n    0.0023923 \n    7 \n    factor \n  \n\n CITIZEN \n    0.0019936 \n    3 \n    factor \n  \n\n A1 \n    0.0007974 \n    5 \n    factor \n  \n\n PC1 \n    0.0000000 \n    1067 \n    numeric \n  \n\n PC2 \n    0.0000000 \n    1067 \n    numeric \n  \n\n PC3 \n    0.0000000 \n    1067 \n    numeric \n  \n\n PC4 \n    0.0000000 \n    1067 \n    numeric \n  \n\n PC5 \n    0.0000000 \n    1067 \n    numeric \n  \n\n PC6 \n    0.0000000 \n    1067 \n    numeric \n  \n\n PC7 \n    0.0000000 \n    1067 \n    numeric \n  \n\n PC8 \n    0.0000000 \n    1067 \n    numeric \n  \n\n PC9 \n    0.0000000 \n    1067 \n    numeric \n  \n\n PC10 \n    0.0000000 \n    1067 \n    numeric \n  \n\n Median_age_persons_G02 \n    0.0000000 \n    39 \n    numeric \n  \n\n Median_mortgage_repay_monthly_G02 \n    0.0000000 \n    355 \n    numeric \n  \n\n Median_tot_prsnl_inc_weekly_G02 \n    0.0000000 \n    581 \n    numeric \n  \n\n Median_rent_weekly_G02 \n    0.0000000 \n    199 \n    numeric \n  \n\n Median_tot_fam_inc_weekly_G02 \n    0.0000000 \n    823 \n    numeric \n  \n\n Average_num_psns_per_bedroom_G02 \n    0.0000000 \n    8 \n    numeric \n  \n\n Median_tot_hhd_inc_weekly_G02 \n    0.0000000 \n    799 \n    numeric \n  \n\n Average_household_size_G02 \n    0.0000000 \n    19 \n    numeric \n  \n\n dem_state \n    0.0000000 \n    8 \n    factor \n  \n\n dem_gender \n    0.0000000 \n    2 \n    factor \n  \n\n born_country_three \n    0.0000000 \n    4 \n    factor \n  \n\n AREAENUM \n    0.0000000 \n    55 \n    ordered \n  \n\n sampsrc \n    0.0000000 \n    3 \n    factor \n  \n\n\n\n\nCall mice for imputing missing:\n\nCoded2022_imp <- futuremice(\n  d2022_for_imp,\n  defaultMethod = c(\"cart\",\"cart\",\"polyreg\",\"cart\"),\n  m = 50,\n  n.core = 10,\n  n.imp.core = 1,\n  maxit = 50\n)\n\nd2022_imputed <- complete(d2022_imp,action = \"long\")\n\n## take most frequently imputed value for missing values of discrete vars\n## average for missing values of continuous\n\n# Define the Mode function\nMode <- function(x) {\n  ux <- unique(x)\n  ux[which.max(tabulate(match(x, ux)))]\n}\n\nd2022_imputed_final <- d2022_imputed %>% \n  group_by(.id) %>% \n  summarise(across(where(is.character) | where(is.factor),\n                   ~Mode(.x)),\n            across(where(is.numeric),\n                   ~median(.x))) %>%\n  ungroup()\n\nsave(d2022_imputed_final,file=here(\"data/2022/aes/d2022_imputed_final.RData\"))"
  },
  {
    "objectID": "analysis/gan/curf_aes_harmonise.html#miscellaneous-others-recoded-to-match-curf",
    "href": "analysis/gan/curf_aes_harmonise.html#miscellaneous-others-recoded-to-match-curf",
    "title": "Harmonise CURF with AES 2022",
    "section": "\n3.4 Miscellaneous others, recoded to match CURF",
    "text": "3.4 Miscellaneous others, recoded to match CURF\n\nCoded2022 <- d2022 %>%\n  mutate(\n    \n    # sex\n    SEXP = dem_gender,\n    \n    ## Indigenous\n    INGP_binary = as.character(H4 == \"Yes\"),\n    \n    ## EDUCATION\n    G3 = factor(\n      G3,\n      levels = c(\n        \"No qualification since leaving school\",\n        \"Trade qualification\",\n        \"Non-trade qualification\",\n        \"Associate Diploma\",\n        \"Undergraduate Diploma\",\n        \"Bachelor Degree (including Honours)\",\n        \"Postgraduate Degree or Postgraduate Diploma\"\n      ),\n      ordered = TRUE\n    ),\n    \n    ## INCOME\n    INCP = case_when(\n      J6 %in% levels(J6)[1:7] ~ levels(curf$INCP)[as.numeric(J6)],\n      J6 %in% levels(J6)[8:10] ~ \"$104,000-$155,999\",\n      J6 %in% levels(J6)[11:13] ~ \"$156,000>\",\n      J6 == \"Item skipped\" ~ NA\n      ),\n    \n     INCP = factor(\n      INCP,\n      levels = levels(curf$INCP),\n      labels = levels(curf$INCP),\n      ordered = TRUE\n    ), \n    \n    J6 = factor(\n      J6,\n      levels = setdiff(names(levs$J6), \"Item skipped\"),\n      ordered = TRUE\n    ),\n    J6_continuous = as.numeric(J6),\n    \n    BPLP = case_when(\n      H3_1 == \"Australia\" ~ \"Australia\",\n      H3_1 == \"Australia (includes External Territories)\" ~ \"Australia\",\n      H3_1 %in% c(\"1200\", \"New Zealand\") ~ \"New Zealand\",\n      H3_1 == \"2200\" ~ \"North-West Europe (excl. United Kingdom, Channel Islands, Isle of Man, Germany)\",\n      H3_1 == \"United Kingdom, Channel Islands and Isle of Man\" ~ \"United Kingdom, Channel Islands & Isle of Man\",\n      H3_1 == \"Item skipped\" ~ NA,\n      H3_1 == \"India\" ~ \"India\",\n      H3_1 == \"South Africa\" ~ \"Sub-Saharan Africa\",\n      H3_1 == \"Philippines\" ~ \"Philippines\",\n      H3_1 == \"China (excludes SARs and Taiwan)\" ~ \"China (excl. SARs and Taiwan)\",\n      H3_1 == \"Vietnam\" ~ \"Vietnam\",\n      H3_1 == \"Germany\" ~ \"Germany\",\n      H3_1 == \"Netherlands\" ~ \"North-West Europe (excl. United Kingdom, Channel Islands, Isle of Man, Germany)\",\n      H3_1 == \"Malaysia\" ~ \"South-East Asia (excl. Vietnam, Philippines)\",\n      H3_1 == \"Italy\" ~ \"Italy\",\n      \n      H3_1 %in% c(\"Sri Lanka\", \"Pakistan\", \"Nepal\", \"Afghanistan\", \"Tajikistan\") ~\n        \"Southern and Central Asia (excl. India)\",\n      \n      H3_1 == \"Canada\" ~ \"Americas\",\n      H3_1 == \"Hong Kong (SAR of China)\" ~ \"North-East Asia (excl. China)\",\n      H3_1 == \"Ireland\" ~ \"North-West Europe (excl. United Kingdom, Channel Islands, Isle of Man, Germany)\",\n      H3_1 == \"Greece\" ~ \"Greece\",\n      H3_1 == \"Singapore\" ~ \"South-East Asia (excl. Vietnam, Philippines)\",\n      H3_1 == \"Malta\" ~ \"Southern and Eastern Europe (excl. Italy, Greece)\",\n      H3_1 == \"Indonesia\" ~ \"South-East Asia (excl. Vietnam, Philippines)\",\n      H3_1 == \"Taiwan\" ~ \"North-East Asia (excl. China)\",\n      H3_1 == \"Fiji\" ~ \"Oceania and Antarctica (excl. Australia, New Zealand)\",\n      H3_1 == \"Croatia\" ~ \"Southern and Eastern Europe (excl. Italy, Greece)\",\n      H3_1 == \"Hungary\" ~ \"Southern and Eastern Europe (excl. Italy, Greece)\",\n      H3_1 == \"Mauritius\" ~ \"Sub-Saharan Africa\",\n      \n      H3_1 %in% c(\n        \"Ghana\",\n        \"Lesotho\",\n        \"Kenya\",\n        \"Nigeria\",\n        \"Tanzania\",\n        \"Uganda\",\n        \"Zimbabwe\",\n        \"Zambia\"\n      ) ~ \"Sub-Saharan Africa\",\n      \n      H3_1 == \"Poland\" ~ \"Southern and Eastern Europe (excl. Italy, Greece)\",\n      \n      H3_1 %in% c(\"Egypt\", \"Israel\", \"Lebanon\", \"Jordan\", \"Kuwait\", \"Syria\") ~ \"North Africa and the Middle East\",\n      \n      H3_1 %in% c(\"Japan\", \"Japan and the Koreas\", \"Mongolia\") ~ \"North-East Asia (excl. China)\",\n      \n      H3_1 == \"Korea, Republic of (South)\" ~ \"North-East Asia (excl. China)\",\n      H3_1 == \"Bangladesh\" ~ \"Southern and Central Asia (excl. India)\",\n      \n      H3_1 %in% c(\n        \"United States of America\",\n        \"Brazil\",\n        \"Chile\",\n        \"Mexico\",\n        \"Peru\",\n        \"Argentina\",\n        \"Columbia\",\n        \"Paraguay\",\n        \"Venezuela, Bolivarian Republic of\",\n        \"Nicaragua\",\n        \"Bolivia, Plurinational State of\",\n        \"Uruguay\"\n      ) ~ \"Americas\",\n      \n      H3_1 == \"Inadequately described\" ~ \"Inadequately described, At sea, Not stated\",\n      H3_1 == \"Papua New Guinea\" ~ \"Oceania and Antarctica (excl. Australia, New Zealand)\",\n      \n      H3_1 %in% c(\"England\", \"Northern Ireland\", \"Wales\", \"Scotland\", \"Guernsey\") ~\n        \"United Kingdom, Channel Islands & Isle of Man\",\n      \n      H3_1 %in% c(\"Austria\", \"Switzerland\") ~ \"North-West Europe (excl. United Kingdom, Channel Islands, Isle of Man, Germany)\",\n      \n      H3_1 == \"Serbia\" ~ \"Southern and Eastern Europe (excl. Italy, Greece)\",\n      H3_1 == \"Ukraine\" ~ \"Southern and Eastern Europe (excl. Italy, Greece)\",\n      H3_1 == \"Iran\" ~ \"North Africa and the Middle East\",\n      H3_1 == \"Turkey\" ~ \"North Africa and the Middle East\",\n      \n      H3_1 %in% c(\"Laos\", \"Thailand\") ~ \"South-East Asia (excl. Vietnam, Philippines)\",\n      \n      H3_1 %in% c(\"Former USSR, nfd\", \"Former Yugoslavia, nfd\") ~ \"Southern and Eastern Europe (excl. Italy, Greece)\",\n      \n      H3_1 %in% c(\n        \"Spain\",\n        \"Portugal\",\n        \"Cyprus\",\n        \"Romania\",\n        \"Estonia\",\n        \"Russian Federation\",\n        \"Slovakia\",\n        \"Former Yugoslav Republic of Macedonia (FYROM)\"\n      ) ~\n        \"Southern and Eastern Europe (excl. Italy, Greece)\",\n      \n      H3_1 == \"Sudan\" ~ \"North Africa and the Middle East\",\n      H3_1 == \"Myanmar, The Republic of the Union of\" ~ \"South-East Asia (excl. Vietnam, Philippines)\"\n    ),\n    \n    \n    born_country_three = case_when(\n      BPLP == \"Australia\" ~ \"Australia\",\n      BPLP %in% c(\n        \"United Kingdom, Channel Islands & Isle of Man\",\n        \"New Zealand\") ~ \"UK/NZ\",\n      is.na(H3_1) | H3_1 == \"Item skipped\" | BPLP == \"Inadequately described, At sea, Not stated\" ~ NA,\n      TRUE ~ \"Other\"\n    ),\n    \n    born_country_three = factor(born_country_three),\n    \n    ANCP_collapse = if_else(H4a == \"Other (please specify)\",\"Other\",H4a),\n    ANCP_collapse = if_else(H4a == \"Item skipped\",NA,ANCP_collapse),\n    ANCP_collapse = factor(ANCP_collapse),\n    \n    MSTP = case_match(\n      H8,\n      \"Never married\" ~ \"Never married\",\n      \"Now married (including de facto relationships)\" ~ \"Married\",\n      \"Divorced or separated\" ~ \"Divorced or separated\",\n      \"Widowed\" ~ \"Widowed\",\n      ),\n    \n    MSTP = factor(MSTP),\n    \n    STATEUR = case_match(\n      dem_state,\n      \"New South Wales\" ~ \"NSW\",\n      \"Victoria\" ~ \"VIC\",\n      \"Queensland\" ~ \"QLD\",\n      \"South Australia\" ~ \"SA\",\n      \"Western Australia\" ~ \"WA\",\n      \"Tasmania\" ~ \"TAS\",\n      \"Northern Territory\" ~ \"NT\",\n      \"Australian Capital Territory\" ~ \"ACT\"\n    ),\n    \n    AGE = as.character(AGE),\n    \n    AGEP = case_when(\n      AGE %in% as.character(0:24) ~ AGE,\n      AGE %in% as.character(25:29) ~ \"25-29\",\n      AGE %in% as.character(30:34) ~ \"30-34\",\n      AGE %in% as.character(35:39) ~ \"35-39\",\n      AGE %in% as.character(40:44) ~ \"40-44\",\n      AGE %in% as.character(45:49) ~ \"45-49\",\n      AGE %in% as.character(50:54) ~ \"50-54\",\n      AGE %in% as.character(55:59) ~ \"55-59\",\n      AGE %in% as.character(60:64) ~ \"60-64\",\n      AGE %in% as.character(65:69) ~ \"65-69\",\n      AGE %in% as.character(70:74) ~ \"70-74\",\n      AGE %in% as.character(75:79) ~ \"75-79\",\n      AGE %in% as.character(80:84) ~ \"80-84\",\n      AGE %in% as.character(85:107) ~ \"85>\",\n      AGE == \"Item Skipped\" ~ NA_character_\n    ), \n    \n      AGEP = factor(\n      AGEP,\n      levels = c(\n        as.character(\n          0:24),\n          \"25-29\",\n          \"30-34\",\n          \"35-39\",\n          \"40-44\",\n          \"45-49\",\n          \"50-54\",\n          \"55-59\",\n          \"60-64\",\n          \"65-69\",\n          \"70-74\",\n          \"75-79\",\n          \"80-84\",\n          \"85>\"),\n      ordered = TRUE),\n    \n    CITP = case_match(\n      CITIZEN,\n      \"Yes\" ~ \"Australian\",\n      \"No\" ~ \"Not Australian\"\n      ),\n    \n    UNI = case_match(\n      G3,\n      \"Postgraduate Degree or Postgraduate Diploma\" ~ \"Yes\",\n      \"Bachelor Degree (including Honours)\" ~ \"Yes\",\n      .default = \"No\"\n    ),\n    \n    enrolled = if_else(\n      J9 == \"I don't know whether I am enrolled\",\n      NA,\n      J9\n    )\n        \n  )"
  },
  {
    "objectID": "analysis/gan/curf_aes_harmonise.html#missing-data-codes",
    "href": "analysis/gan/curf_aes_harmonise.html#missing-data-codes",
    "title": "Harmonise CURF with AES 2022",
    "section": "\n3.5 Missing data codes",
    "text": "3.5 Missing data codes\nRecode Item skipped and Unknown to NA.\n\nCodemissingRecode <- function(x) {\n  str <- tolower(as.character(x))\n  z <- if_else(\n    grepl(\n      pattern = \"(item skipped)|(unknown)\",\n      str),\n    NA,\n    x)\n  return(z)\n}\n\nd2022 <- d2022 %>% \n  mutate(\n    across(\n      where(is.factor) | where(is.character), \n      ~missingRecode(.x)\n      )\n    )"
  },
  {
    "objectID": "analysis/gan/curf_aes_harmonise.html#save-the-copy-of-d2022-we-have-at-this-stage",
    "href": "analysis/gan/curf_aes_harmonise.html#save-the-copy-of-d2022-we-have-at-this-stage",
    "title": "Harmonise CURF with AES 2022",
    "section": "\n3.7 Save the copy of d2022 we have at this stage",
    "text": "3.7 Save the copy of d2022 we have at this stage\n\nCodesave(d2022,file=here(\"data/2022/aes/d2022_recoded.RData\"))"
  },
  {
    "objectID": "analysis/gan/curf_aes_harmonise.html#add-areaenum-level-covariates",
    "href": "analysis/gan/curf_aes_harmonise.html#add-areaenum-level-covariates",
    "title": "Harmonise CURF with AES 2022",
    "section": "\n4.3 Add AREAENUM level covariates",
    "text": "4.3 Add AREAENUM level covariates\n\nCodecombined <- left_join(\n  combined,\n  left_join(\n    areaenum_covars,\n    areaenum_info,\n    by = \"AREAENUM\") \n  %>% \n    mutate(AREAENUM = description) %>% \n    select(-description),\n  by = \"AREAENUM\"\n)"
  },
  {
    "objectID": "analysis/gan/curf_aes_harmonise.html#write-to-file",
    "href": "analysis/gan/curf_aes_harmonise.html#write-to-file",
    "title": "Harmonise CURF with AES 2022",
    "section": "\n4.4 Write to file",
    "text": "4.4 Write to file\n\nCodewrite_fst(combined,\n          path = here(\"data/2022/curf/aes_combined.fst\"))"
  },
  {
    "objectID": "analysis/gan/curf_aes_harmonise.html#compute-summary-stats-for-inspection",
    "href": "analysis/gan/curf_aes_harmonise.html#compute-summary-stats-for-inspection",
    "title": "Harmonise CURF with AES 2022",
    "section": "\n4.5 Compute summary stats for inspection",
    "text": "4.5 Compute summary stats for inspection\n\nCodecombined_marginals <- combined %>% \n  select(-starts_with(\"PC\"),-ends_with(\"_G02\"),-AGE_continuous) %>% \n  pivot_longer(cols = !(source),\n               names_to = \"var\",\n               values_to = \"value\") %>% \n  count(var,source,value) %>%\n  group_by(var,source) %>% \n  mutate(p = n/sum(n)) %>% \n  ungroup() %>% \n  pivot_wider(id_cols = c(\"var\",\"value\"),\n              names_from = \"source\",\n              values_from = c(\"n\",\"p\"))\n\nlevelSets <- list()\nfor (v in theVars) {\n  thisVar <- d2022 %>% pull({{v}})\n  levs <- if(is.factor(thisVar)){\n    levels(thisVar)\n  } else {\n    sort(unique(thisVar))\n  }\n  \n  levelSets[[v]] <- tibble(value = levs) %>% mutate(indx = 1:n())\n\n  }\n\nlevelSets <- bind_rows(levelSets,.id = \"var\")\n\ncombined_marginals <- left_join(combined_marginals,\n                                levelSets,\n                                by = c(\"var\",\"value\")) %>%\n  arrange(var,indx)\n\n\n\nCodeojs_define(combined_marginals_raw = combined_marginals)\nojs_define(theVars_raw = theVars)\n\n\n\nCodecombined_marginals = transpose(combined_marginals_raw)\n\nviewof combined_selection = Inputs.select(\n  theVars_raw,\n  {\n    label: \"Select variable:\"\n  }\n)\n\ncombined_tab = aq.from(combined_marginals)\n  .filter(aq.escape(d => d.var == combined_selection))\n\nInputs.table(\n  combined_tab,\n  {\n    columns: [ \"value\", \"n_AES\", \"p_AES\", \"n_CURF\", \"p_CURF\" ],\n    header: {\n      n_AES: \"n AES\",\n      n_CURF: \"n CURF\",\n      p_AES: \"AES %\",\n      p_CURF: \"CURF %\"\n    },\n    format: {\n      p_AES: x => d3.format(\".1%\")(x),\n      p_CURF: x => d3.format(\".1%\")(x)\n    },\n    sort: \"indx\",\n    rows: combined_tab.numRows(),\n    maxHeight: (combined_tab.numRows()+1.5)*28\n  }\n)"
  },
  {
    "objectID": "analysis/gan/curf_aes_harmonise.html#drop-unused-levels-on-incp-and-agep",
    "href": "analysis/gan/curf_aes_harmonise.html#drop-unused-levels-on-incp-and-agep",
    "title": "Harmonise CURF with AES 2022",
    "section": "\n4.1 Drop unused levels on INCP and AGEP\n",
    "text": "4.1 Drop unused levels on INCP and AGEP\n\n\nCodecombined <- combined %>% \n  mutate(INCP = fct_drop(INCP),\n         AGEP = fct_drop(AGEP))"
  },
  {
    "objectID": "analysis/gan/curf_aes_harmonise.html#make-agep-continuous-for-imputations",
    "href": "analysis/gan/curf_aes_harmonise.html#make-agep-continuous-for-imputations",
    "title": "Harmonise CURF with AES 2022",
    "section": "\n4.2 Make AGEP continuous for imputations",
    "text": "4.2 Make AGEP continuous for imputations\nImputing continuous quantity easier than discrete. We will convert back to discrete after imputations:\n\nCodecombined <- combined %>% \n  mutate(\n    AGE_continuous = case_when(\n      AGEP == \"18\" ~ 18,\n      AGEP == \"19\" ~ 19,\n      AGEP == \"20\" ~ 20,\n      AGEP == \"21\" ~ 21,\n      AGEP == \"22\" ~ 22,\n      AGEP == \"23\" ~ 23,\n      AGEP == \"24\" ~ 24,\n      AGEP == \"25-29\" ~ 27,\n      AGEP == \"30-34\" ~ 32,\n      AGEP == \"35-39\" ~ 37,\n      AGEP == \"40-44\" ~ 42,\n      AGEP == \"45-49\" ~ 47,\n      AGEP == \"50-54\" ~ 52,\n      AGEP == \"55-59\" ~ 57,\n      AGEP == \"60-64\" ~ 62,\n      AGEP == \"65-69\" ~ 67,\n      AGEP == \"70-74\" ~ 72,\n      AGEP == \"75-79\" ~ 77,\n      AGEP == \"80-84\" ~ 82,\n      AGEP == \"85>\" ~ 87\n      )\n  )"
  },
  {
    "objectID": "analysis/gan/gan_table.html",
    "href": "analysis/gan/gan_table.html",
    "title": "Calling CTGAN from R\n",
    "section": "",
    "text": "1 Setup\nWe use a mix of python code chunks and invocations of python from R code chunks via the reticulate package.\n\n\n\nWhich python is being used by R and quarto?:\n\n\n[1] \"/usr/local/bin/python3\"\n\n\nLoad ctgan and our CURF data.\n\n\n\n\n\n\nIn python, crate an array of the names of columns that contain discrete data:\n\n\n\nThe following code runs from inside RStudio at the console, but causes quarto to hang. Hence we run the code separately, saving the serialised model object to file and re-loading it into this quarto workflow:\n\n\n\n\n\n\nLoad the serialised python data object:\n\n\n\n\n2 Synthetic data compared with real\n\n\n\n\n\n\n\nCodeviewof sim_var = Inputs.select(\n  varNames,\n  {\n    label: \"Select variable:\"\n  }\n)\n\n\n\n\n\n\n\nCodeimport { aq, op } from \"@uwdata/arquero\"\n\n\n\n\n\n\n\n\n\n\nCodemarginal = transpose(marginal_raw)\nmarginal_tab = aq.from(marginal)\n  .filter(aq.escape(d => d.var == sim_var))\n\nInputs.table(marginal_tab,\n  {\n    columns: [ \"value\", \"p_simulated\", \"p_real\"],\n    header: {\n      p_simulated: \"% (simulated)\",\n      p_raw: \"% (real)\"\n    },\n    format: {\n      p_simulated: x => d3.format(\".1%\")(x),\n      p_real:      x => d3.format(\".1%\")(x)\n    },\n    sort: \"value\",\n    rows: marginal_tab.numRows(),\n    maxHeight: (marginal_tab.numRows()+1.5)*28\n  }\n)"
  },
  {
    "objectID": "analysis/backtesting.html#performance-with-modal-missing-data-imputation",
    "href": "analysis/backtesting.html#performance-with-modal-missing-data-imputation",
    "title": "Backtesting with 2022 election results",
    "section": "\n1.1 Performance with modal missing data imputation",
    "text": "1.1 Performance with modal missing data imputation\n\n\n\n\n\n\nBrier score: 0.2459391\nConfusion matrix: actual (rows) by predicted/max-prob (cols):\n\n\n\n\n\n   \n    Coalition \n    Greens \n    Independent \n    Labor \n    Other \n  \n\n\n Coalition \n    54.1 \n    4.3 \n    2.1 \n    39.3 \n    0.2 \n  \n\n Greens \n    28.7 \n    20.3 \n    3.7 \n    47.3 \n    0.0 \n  \n\n Independent \n    32.8 \n    7.0 \n    15.1 \n    45.2 \n    0.0 \n  \n\n Labor \n    38.0 \n    8.0 \n    1.7 \n    52.0 \n    0.3 \n  \n\n Other \n    53.4 \n    4.3 \n    3.4 \n    38.8 \n    0.0"
  },
  {
    "objectID": "analysis/backtesting.html#vote-marginal-for-the-curf-data-from-imputed-data",
    "href": "analysis/backtesting.html#vote-marginal-for-the-curf-data-from-imputed-data",
    "title": "Backtesting with 2022 election results",
    "section": "\n2.1 Vote marginal for the CURF data from imputed data",
    "text": "2.1 Vote marginal for the CURF data from imputed data\n\n\n\n\n\n 2022 House vote \n     \n  \n\n\n Coalition \n    19.9 \n  \n\n Greens \n    20.0 \n  \n\n Independent \n    20.0 \n  \n\n Labor \n    20.1 \n  \n\n Other \n    20.0"
  },
  {
    "objectID": "analysis/backtesting.html#predict-onto-curf-from-model-fit-to-complete-aes-data",
    "href": "analysis/backtesting.html#predict-onto-curf-from-model-fit-to-complete-aes-data",
    "title": "Backtesting with 2022 election results",
    "section": "\n2.2 Predict onto CURF from model fit to complete AES data",
    "text": "2.2 Predict onto CURF from model fit to complete AES data\n\n\n\n\n\n\n\n\n 2022 House vote \n    MaxProb \n    SumProbs \n    Actual \n  \n\n\n Coalition \n    45.4 \n    35.9 \n    35.7 \n  \n\n Greens \n    9.1 \n    16.0 \n    12.2 \n  \n\n Independent \n    1.9 \n    7.4 \n    5.3 \n  \n\n Labor \n    43.0 \n    34.9 \n    32.6 \n  \n\n Other \n    0.6 \n    5.7 \n    14.2"
  }
]